import{f as ye,a as za}from"./strtok3-BXaumHbT.js";import{f as ha}from"./file-type-BdA4k6lR.js";import{C as Fa}from"./content-type-kkloIWN6.js";import{m as _a}from"./media-typer-Kaw9hxcp.js";import{i as b}from"./debug-Dqg9INeJ.js";import{S as T,f as Ne,c as k,b as C,e as w,a as g,g as F,U as y,h as U,i as ae,d as L,j as Ma,k as mt,l as v,F as zt,m as Ra,n as pa,I as q,o as ga,T as Oa,p as Ft}from"./token-types-D2R8hC8p.js";import{E as ie}from"./peek-readable-BVp5v6zA.js";import{s as Ba,u as bt,a as yt,h as _t}from"./uint8array-extras-B1Dultle.js";const La={10:"shot",20:"scene",30:"track",40:"part",50:"album",60:"edition",70:"collection"},H={video:1,audio:2,complex:3,logo:4,subtitle:17,button:18,control:32},Na={[H.video]:"video",[H.audio]:"audio",[H.complex]:"complex",[H.logo]:"logo",[H.subtitle]:"subtitle",[H.button]:"button",[H.control]:"control"},Ae=a=>class extends Error{constructor(t){super(t),this.name=a}};class $a extends Ae("CouldNotDetermineFileTypeError"){}class Ua extends Ae("UnsupportedFileTypeError"){}class Ga extends Ae("UnexpectedFileContentError"){constructor(e,t){super(t),this.fileType=e}toString(){return`${this.name} (FileType: ${this.fileType}): ${this.message}`}}class ft extends Ae("FieldDecodingError"){}class ka extends Ae("InternalParserError"){}const E=a=>class extends Ga{constructor(e){super(a,e)}};function A(a,e,t){return(a[e]&1<<t)!==0}function R(a,e,t,i){let s=e;if(i==="utf-16le"){for(;a[s]!==0||a[s+1]!==0;){if(s>=t)return t;s+=2}return s}for(;a[s]!==0;){if(s>=t)return t;s++}return s}function Ta(a){const e=a.indexOf("\0");return e===-1?a:a.substr(0,e)}function Xa(a){const e=a.length;if((e&1)!==0)throw new ft("Buffer length must be even");for(let t=0;t<e;t+=2){const i=a[t];a[t]=a[t+1],a[t+1]=i}return a}function x(a,e){if(a[0]===255&&a[1]===254)return x(a.subarray(2),e);if(e==="utf-16le"&&a[0]===254&&a[1]===255){if((a.length&1)!==0)throw new ft("Expected even number of octets for 16-bit unicode string");return x(Xa(a),e)}return new T(a.length,e).get(a,0)}function te(a){return a=a.replace(/^\x00+/g,""),a=a.replace(/\x00+$/g,""),a}function S(a,e,t,i){const s=e+~~(t/8),n=t%8;let r=a[s];r&=255>>n;const o=8-n,c=i-o;return c<0?r>>=8-n-i:c>0&&(r<<=c,r|=S(a,e,t+o,c)),r}function N(a,e,t){return S(a,e,t,1)===1}function ja(a){const e=[];for(let t=0,i=a.length;t<i;t++){const s=Number(a.charCodeAt(t)).toString(16);e.push(s.length===1?`0${s}`:s)}return e.join(" ")}function Ha(a){return 10*Math.log10(a)}function Wa(a){return 10**(a/10)}function Va(a){const e=a.split(" ").map(t=>t.trim().toLowerCase());if(e.length>=1){const t=Number.parseFloat(e[0]);return e.length===2&&e[1]==="db"?{dB:t,ratio:Wa(t)}:{dB:Ha(t),ratio:t}}}const Ct={0:"Other",1:"32x32 pixels 'file icon' (PNG only)",2:"Other file icon",3:"Cover (front)",4:"Cover (back)",5:"Leaflet page",6:"Media (e.g. label side of CD)",7:"Lead artist/lead performer/soloist",8:"Artist/performer",9:"Conductor",10:"Band/Orchestra",11:"Composer",12:"Lyricist/text writer",13:"Recording Location",14:"During recording",15:"During performance",16:"Movie/video screen capture",17:"A bright coloured fish",18:"Illustration",19:"Band/artist logotype",20:"Publisher/Studio logotype"},qa={lyrics:1},Ya={milliseconds:2},wa={get:(a,e)=>a[e+3]&127|a[e+2]<<7|a[e+1]<<14|a[e]<<21,len:4},ut={len:10,get:(a,e)=>({fileIdentifier:new T(3,"ascii").get(a,e),version:{major:Ne.get(a,e+3),revision:Ne.get(a,e+4)},flags:{unsynchronisation:A(a,e+5,7),isExtendedHeader:A(a,e+5,6),expIndicator:A(a,e+5,5),footer:A(a,e+5,4)},size:wa.get(a,e+6)})},Mt={len:10,get:(a,e)=>({size:k.get(a,e),extendedFlags:C.get(a,e+4),sizeOfPadding:k.get(a,e+6),crcDataPresent:A(a,e+4,31)})},Ia={len:1,get:(a,e)=>{switch(a[e]){case 0:return{encoding:"latin1"};case 1:return{encoding:"utf-16le",bom:!0};case 2:return{encoding:"utf-16le",bom:!1};case 3:return{encoding:"utf8",bom:!1};default:return{encoding:"utf8",bom:!1}}}},ht={len:4,get:(a,e)=>({encoding:Ia.get(a,e),language:new T(3,"latin1").get(a,e+1)})},Rt={len:6,get:(a,e)=>{const t=ht.get(a,e);return{encoding:t.encoding,language:t.language,timeStampFormat:w.get(a,e+4),contentType:w.get(a,e+5)}}},m={multiple:!1},$e={year:m,track:m,disk:m,title:m,artist:m,artists:{multiple:!0,unique:!0},albumartist:m,album:m,date:m,originaldate:m,originalyear:m,releasedate:m,comment:{multiple:!0,unique:!1},genre:{multiple:!0,unique:!0},picture:{multiple:!0,unique:!0},composer:{multiple:!0,unique:!0},lyrics:{multiple:!0,unique:!1},albumsort:{multiple:!1,unique:!0},titlesort:{multiple:!1,unique:!0},work:{multiple:!1,unique:!0},artistsort:{multiple:!1,unique:!0},albumartistsort:{multiple:!1,unique:!0},composersort:{multiple:!1,unique:!0},lyricist:{multiple:!0,unique:!0},writer:{multiple:!0,unique:!0},conductor:{multiple:!0,unique:!0},remixer:{multiple:!0,unique:!0},arranger:{multiple:!0,unique:!0},engineer:{multiple:!0,unique:!0},producer:{multiple:!0,unique:!0},technician:{multiple:!0,unique:!0},djmixer:{multiple:!0,unique:!0},mixer:{multiple:!0,unique:!0},label:{multiple:!0,unique:!0},grouping:m,subtitle:{multiple:!0},discsubtitle:m,totaltracks:m,totaldiscs:m,compilation:m,rating:{multiple:!0},bpm:m,mood:m,media:m,catalognumber:{multiple:!0,unique:!0},tvShow:m,tvShowSort:m,tvSeason:m,tvEpisode:m,tvEpisodeId:m,tvNetwork:m,podcast:m,podcasturl:m,releasestatus:m,releasetype:{multiple:!0},releasecountry:m,script:m,language:m,copyright:m,license:m,encodedby:m,encodersettings:m,gapless:m,barcode:m,isrc:{multiple:!0},asin:m,musicbrainz_recordingid:m,musicbrainz_trackid:m,musicbrainz_albumid:m,musicbrainz_artistid:{multiple:!0},musicbrainz_albumartistid:{multiple:!0},musicbrainz_releasegroupid:m,musicbrainz_workid:m,musicbrainz_trmid:m,musicbrainz_discid:m,acoustid_id:m,acoustid_fingerprint:m,musicip_puid:m,musicip_fingerprint:m,website:m,"performer:instrument":{multiple:!0,unique:!0},averageLevel:m,peakLevel:m,notes:{multiple:!0,unique:!1},key:m,originalalbum:m,originalartist:m,discogs_artist_id:{multiple:!0,unique:!0},discogs_release_id:m,discogs_label_id:m,discogs_master_release_id:m,discogs_votes:m,discogs_rating:m,replaygain_track_peak:m,replaygain_track_gain:m,replaygain_album_peak:m,replaygain_album_gain:m,replaygain_track_minmax:m,replaygain_album_minmax:m,replaygain_undo:m,description:{multiple:!0},longDescription:m,category:{multiple:!0},hdVideo:m,keywords:{multiple:!0},movement:m,movementIndex:m,movementTotal:m,podcastId:m,showMovement:m,stik:m};function Ka(a){return $e[a]&&!$e[a].multiple}function Za(a){return!$e[a].multiple||$e[a].unique||!1}class ${static toIntOrNull(e){const t=Number.parseInt(e,10);return Number.isNaN(t)?null:t}static normalizeTrack(e){const t=e.toString().split("/");return{no:Number.parseInt(t[0],10)||null,of:Number.parseInt(t[1],10)||null}}constructor(e,t){this.tagTypes=e,this.tagMap=t}mapGenericTag(e,t){e={id:e.id,value:e.value},this.postMap(e,t);const i=this.getCommonName(e.id);return i?{id:i,value:e.value}:null}getCommonName(e){return this.tagMap[e]}postMap(e,t){}}$.maxRatingScore=1;const Ja={title:"title",artist:"artist",album:"album",year:"year",comment:"comment",track:"track",genre:"genre"};class Qa extends ${constructor(){super(["ID3v1"],Ja)}}class ve extends ${constructor(e,t){const i={};for(const s of Object.keys(t))i[s.toUpperCase()]=t[s];super(e,i)}getCommonName(e){return this.tagMap[e.toUpperCase()]}}const ei={TIT2:"title",TPE1:"artist","TXXX:Artists":"artists",TPE2:"albumartist",TALB:"album",TDRV:"date",TORY:"originalyear",TPOS:"disk",TCON:"genre",APIC:"picture",TCOM:"composer",USLT:"lyrics",TSOA:"albumsort",TSOT:"titlesort",TOAL:"originalalbum",TSOP:"artistsort",TSO2:"albumartistsort",TSOC:"composersort",TEXT:"lyricist","TXXX:Writer":"writer",TPE3:"conductor",TPE4:"remixer","IPLS:arranger":"arranger","IPLS:engineer":"engineer","IPLS:producer":"producer","IPLS:DJ-mix":"djmixer","IPLS:mix":"mixer",TPUB:"label",TIT1:"grouping",TIT3:"subtitle",TRCK:"track",TCMP:"compilation",POPM:"rating",TBPM:"bpm",TMED:"media","TXXX:CATALOGNUMBER":"catalognumber","TXXX:MusicBrainz Album Status":"releasestatus","TXXX:MusicBrainz Album Type":"releasetype","TXXX:MusicBrainz Album Release Country":"releasecountry","TXXX:RELEASECOUNTRY":"releasecountry","TXXX:SCRIPT":"script",TLAN:"language",TCOP:"copyright",WCOP:"license",TENC:"encodedby",TSSE:"encodersettings","TXXX:BARCODE":"barcode","TXXX:ISRC":"isrc",TSRC:"isrc","TXXX:ASIN":"asin","TXXX:originalyear":"originalyear","UFID:http://musicbrainz.org":"musicbrainz_recordingid","TXXX:MusicBrainz Release Track Id":"musicbrainz_trackid","TXXX:MusicBrainz Album Id":"musicbrainz_albumid","TXXX:MusicBrainz Artist Id":"musicbrainz_artistid","TXXX:MusicBrainz Album Artist Id":"musicbrainz_albumartistid","TXXX:MusicBrainz Release Group Id":"musicbrainz_releasegroupid","TXXX:MusicBrainz Work Id":"musicbrainz_workid","TXXX:MusicBrainz TRM Id":"musicbrainz_trmid","TXXX:MusicBrainz Disc Id":"musicbrainz_discid","TXXX:ACOUSTID_ID":"acoustid_id","TXXX:Acoustid Id":"acoustid_id","TXXX:Acoustid Fingerprint":"acoustid_fingerprint","TXXX:MusicIP PUID":"musicip_puid","TXXX:MusicMagic Fingerprint":"musicip_fingerprint",WOAR:"website",TDRC:"date",TYER:"year",TDOR:"originaldate","TIPL:arranger":"arranger","TIPL:engineer":"engineer","TIPL:producer":"producer","TIPL:DJ-mix":"djmixer","TIPL:mix":"mixer",TMOO:"mood",SYLT:"lyrics",TSST:"discsubtitle",TKEY:"key",COMM:"comment",TOPE:"originalartist","PRIV:AverageLevel":"averageLevel","PRIV:PeakLevel":"peakLevel","TXXX:DISCOGS_ARTIST_ID":"discogs_artist_id","TXXX:DISCOGS_ARTISTS":"artists","TXXX:DISCOGS_ARTIST_NAME":"artists","TXXX:DISCOGS_ALBUM_ARTISTS":"albumartist","TXXX:DISCOGS_CATALOG":"catalognumber","TXXX:DISCOGS_COUNTRY":"releasecountry","TXXX:DISCOGS_DATE":"originaldate","TXXX:DISCOGS_LABEL":"label","TXXX:DISCOGS_LABEL_ID":"discogs_label_id","TXXX:DISCOGS_MASTER_RELEASE_ID":"discogs_master_release_id","TXXX:DISCOGS_RATING":"discogs_rating","TXXX:DISCOGS_RELEASED":"date","TXXX:DISCOGS_RELEASE_ID":"discogs_release_id","TXXX:DISCOGS_VOTES":"discogs_votes","TXXX:CATALOGID":"catalognumber","TXXX:STYLE":"genre","TXXX:REPLAYGAIN_TRACK_PEAK":"replaygain_track_peak","TXXX:REPLAYGAIN_TRACK_GAIN":"replaygain_track_gain","TXXX:REPLAYGAIN_ALBUM_PEAK":"replaygain_album_peak","TXXX:REPLAYGAIN_ALBUM_GAIN":"replaygain_album_gain","TXXX:MP3GAIN_MINMAX":"replaygain_track_minmax","TXXX:MP3GAIN_ALBUM_MINMAX":"replaygain_album_minmax","TXXX:MP3GAIN_UNDO":"replaygain_undo",MVNM:"movement",MVIN:"movementIndex",PCST:"podcast",TCAT:"category",TDES:"description",TDRL:"releasedate",TGID:"podcastId",TKWD:"keywords",WFED:"podcasturl",GRP1:"grouping"};class At extends ve{static toRating(e){return{source:e.email,rating:e.rating>0?(e.rating-1)/254*$.maxRatingScore:void 0}}constructor(){super(["ID3v2.3","ID3v2.4"],ei)}postMap(e,t){switch(e.id){case"UFID":{const i=e.value;i.owner_identifier==="http://musicbrainz.org"&&(e.id+=`:${i.owner_identifier}`,e.value=x(i.identifier,"latin1"))}break;case"PRIV":{const i=e.value;switch(i.owner_identifier){case"AverageLevel":case"PeakValue":e.id+=`:${i.owner_identifier}`,e.value=i.data.length===4?g.get(i.data,0):null,e.value===null&&t.addWarning("Failed to parse PRIV:PeakValue");break;default:t.addWarning(`Unknown PRIV owner-identifier: ${i.data}`)}}break;case"POPM":e.value=At.toRating(e.value);break}}}const ti={Title:"title",Author:"artist","WM/AlbumArtist":"albumartist","WM/AlbumTitle":"album","WM/Year":"date","WM/OriginalReleaseTime":"originaldate","WM/OriginalReleaseYear":"originalyear",Description:"comment","WM/TrackNumber":"track","WM/PartOfSet":"disk","WM/Genre":"genre","WM/Composer":"composer","WM/Lyrics":"lyrics","WM/AlbumSortOrder":"albumsort","WM/TitleSortOrder":"titlesort","WM/ArtistSortOrder":"artistsort","WM/AlbumArtistSortOrder":"albumartistsort","WM/ComposerSortOrder":"composersort","WM/Writer":"lyricist","WM/Conductor":"conductor","WM/ModifiedBy":"remixer","WM/Engineer":"engineer","WM/Producer":"producer","WM/DJMixer":"djmixer","WM/Mixer":"mixer","WM/Publisher":"label","WM/ContentGroupDescription":"grouping","WM/SubTitle":"subtitle","WM/SetSubTitle":"discsubtitle","WM/IsCompilation":"compilation","WM/SharedUserRating":"rating","WM/BeatsPerMinute":"bpm","WM/Mood":"mood","WM/Media":"media","WM/CatalogNo":"catalognumber","MusicBrainz/Album Status":"releasestatus","MusicBrainz/Album Type":"releasetype","MusicBrainz/Album Release Country":"releasecountry","WM/Script":"script","WM/Language":"language",Copyright:"copyright",LICENSE:"license","WM/EncodedBy":"encodedby","WM/EncodingSettings":"encodersettings","WM/Barcode":"barcode","WM/ISRC":"isrc","MusicBrainz/Track Id":"musicbrainz_recordingid","MusicBrainz/Release Track Id":"musicbrainz_trackid","MusicBrainz/Album Id":"musicbrainz_albumid","MusicBrainz/Artist Id":"musicbrainz_artistid","MusicBrainz/Album Artist Id":"musicbrainz_albumartistid","MusicBrainz/Release Group Id":"musicbrainz_releasegroupid","MusicBrainz/Work Id":"musicbrainz_workid","MusicBrainz/TRM Id":"musicbrainz_trmid","MusicBrainz/Disc Id":"musicbrainz_discid","Acoustid/Id":"acoustid_id","Acoustid/Fingerprint":"acoustid_fingerprint","MusicIP/PUID":"musicip_puid","WM/ARTISTS":"artists","WM/InitialKey":"key",ASIN:"asin","WM/Work":"work","WM/AuthorURL":"website","WM/Picture":"picture"};class vt extends ${static toRating(e){return{rating:Number.parseFloat(e+1)/5}}constructor(){super(["asf"],ti)}postMap(e){switch(e.id){case"WM/SharedUserRating":{const t=e.id.split(":");e.value=vt.toRating(e.value),e.id=t[0];break}}}}const ai={TT2:"title",TP1:"artist",TP2:"albumartist",TAL:"album",TYE:"year",COM:"comment",TRK:"track",TPA:"disk",TCO:"genre",PIC:"picture",TCM:"composer",TOR:"originaldate",TOT:"originalalbum",TXT:"lyricist",TP3:"conductor",TPB:"label",TT1:"grouping",TT3:"subtitle",TLA:"language",TCR:"copyright",WCP:"license",TEN:"encodedby",TSS:"encodersettings",WAR:"website",PCS:"podcast",TCP:"compilation",TDR:"date",TS2:"albumartistsort",TSA:"albumsort",TSC:"composersort",TSP:"artistsort",TST:"titlesort",WFD:"podcasturl",TBP:"bpm"};class ii extends ve{constructor(){super(["ID3v2.2"],ai)}}const si={Title:"title",Artist:"artist",Artists:"artists","Album Artist":"albumartist",Album:"album",Year:"date",Originalyear:"originalyear",Originaldate:"originaldate",Releasedate:"releasedate",Comment:"comment",Track:"track",Disc:"disk",DISCNUMBER:"disk",Genre:"genre","Cover Art (Front)":"picture","Cover Art (Back)":"picture",Composer:"composer",Lyrics:"lyrics",ALBUMSORT:"albumsort",TITLESORT:"titlesort",WORK:"work",ARTISTSORT:"artistsort",ALBUMARTISTSORT:"albumartistsort",COMPOSERSORT:"composersort",Lyricist:"lyricist",Writer:"writer",Conductor:"conductor",MixArtist:"remixer",Arranger:"arranger",Engineer:"engineer",Producer:"producer",DJMixer:"djmixer",Mixer:"mixer",Label:"label",Grouping:"grouping",Subtitle:"subtitle",DiscSubtitle:"discsubtitle",Compilation:"compilation",BPM:"bpm",Mood:"mood",Media:"media",CatalogNumber:"catalognumber",MUSICBRAINZ_ALBUMSTATUS:"releasestatus",MUSICBRAINZ_ALBUMTYPE:"releasetype",RELEASECOUNTRY:"releasecountry",Script:"script",Language:"language",Copyright:"copyright",LICENSE:"license",EncodedBy:"encodedby",EncoderSettings:"encodersettings",Barcode:"barcode",ISRC:"isrc",ASIN:"asin",musicbrainz_trackid:"musicbrainz_recordingid",musicbrainz_releasetrackid:"musicbrainz_trackid",MUSICBRAINZ_ALBUMID:"musicbrainz_albumid",MUSICBRAINZ_ARTISTID:"musicbrainz_artistid",MUSICBRAINZ_ALBUMARTISTID:"musicbrainz_albumartistid",MUSICBRAINZ_RELEASEGROUPID:"musicbrainz_releasegroupid",MUSICBRAINZ_WORKID:"musicbrainz_workid",MUSICBRAINZ_TRMID:"musicbrainz_trmid",MUSICBRAINZ_DISCID:"musicbrainz_discid",Acoustid_Id:"acoustid_id",ACOUSTID_FINGERPRINT:"acoustid_fingerprint",MUSICIP_PUID:"musicip_puid",Weblink:"website",REPLAYGAIN_TRACK_GAIN:"replaygain_track_gain",REPLAYGAIN_TRACK_PEAK:"replaygain_track_peak",MP3GAIN_MINMAX:"replaygain_track_minmax",MP3GAIN_UNDO:"replaygain_undo"};class ni extends ve{constructor(){super(["APEv2"],si)}}const ri={"©nam":"title","©ART":"artist",aART:"albumartist","----:com.apple.iTunes:Band":"albumartist","©alb":"album","©day":"date","©cmt":"comment","©com":"comment",trkn:"track",disk:"disk","©gen":"genre",covr:"picture","©wrt":"composer","©lyr":"lyrics",soal:"albumsort",sonm:"titlesort",soar:"artistsort",soaa:"albumartistsort",soco:"composersort","----:com.apple.iTunes:LYRICIST":"lyricist","----:com.apple.iTunes:CONDUCTOR":"conductor","----:com.apple.iTunes:REMIXER":"remixer","----:com.apple.iTunes:ENGINEER":"engineer","----:com.apple.iTunes:PRODUCER":"producer","----:com.apple.iTunes:DJMIXER":"djmixer","----:com.apple.iTunes:MIXER":"mixer","----:com.apple.iTunes:LABEL":"label","©grp":"grouping","----:com.apple.iTunes:SUBTITLE":"subtitle","----:com.apple.iTunes:DISCSUBTITLE":"discsubtitle",cpil:"compilation",tmpo:"bpm","----:com.apple.iTunes:MOOD":"mood","----:com.apple.iTunes:MEDIA":"media","----:com.apple.iTunes:CATALOGNUMBER":"catalognumber",tvsh:"tvShow",tvsn:"tvSeason",tves:"tvEpisode",sosn:"tvShowSort",tven:"tvEpisodeId",tvnn:"tvNetwork",pcst:"podcast",purl:"podcasturl","----:com.apple.iTunes:MusicBrainz Album Status":"releasestatus","----:com.apple.iTunes:MusicBrainz Album Type":"releasetype","----:com.apple.iTunes:MusicBrainz Album Release Country":"releasecountry","----:com.apple.iTunes:SCRIPT":"script","----:com.apple.iTunes:LANGUAGE":"language",cprt:"copyright","©cpy":"copyright","----:com.apple.iTunes:LICENSE":"license","©too":"encodedby",pgap:"gapless","----:com.apple.iTunes:BARCODE":"barcode","----:com.apple.iTunes:ISRC":"isrc","----:com.apple.iTunes:ASIN":"asin","----:com.apple.iTunes:NOTES":"comment","----:com.apple.iTunes:MusicBrainz Track Id":"musicbrainz_recordingid","----:com.apple.iTunes:MusicBrainz Release Track Id":"musicbrainz_trackid","----:com.apple.iTunes:MusicBrainz Album Id":"musicbrainz_albumid","----:com.apple.iTunes:MusicBrainz Artist Id":"musicbrainz_artistid","----:com.apple.iTunes:MusicBrainz Album Artist Id":"musicbrainz_albumartistid","----:com.apple.iTunes:MusicBrainz Release Group Id":"musicbrainz_releasegroupid","----:com.apple.iTunes:MusicBrainz Work Id":"musicbrainz_workid","----:com.apple.iTunes:MusicBrainz TRM Id":"musicbrainz_trmid","----:com.apple.iTunes:MusicBrainz Disc Id":"musicbrainz_discid","----:com.apple.iTunes:Acoustid Id":"acoustid_id","----:com.apple.iTunes:Acoustid Fingerprint":"acoustid_fingerprint","----:com.apple.iTunes:MusicIP PUID":"musicip_puid","----:com.apple.iTunes:fingerprint":"musicip_fingerprint","----:com.apple.iTunes:replaygain_track_gain":"replaygain_track_gain","----:com.apple.iTunes:replaygain_track_peak":"replaygain_track_peak","----:com.apple.iTunes:replaygain_album_gain":"replaygain_album_gain","----:com.apple.iTunes:replaygain_album_peak":"replaygain_album_peak","----:com.apple.iTunes:replaygain_track_minmax":"replaygain_track_minmax","----:com.apple.iTunes:replaygain_album_minmax":"replaygain_album_minmax","----:com.apple.iTunes:replaygain_undo":"replaygain_undo",gnre:"genre","----:com.apple.iTunes:ALBUMARTISTSORT":"albumartistsort","----:com.apple.iTunes:ARTISTS":"artists","----:com.apple.iTunes:ORIGINALDATE":"originaldate","----:com.apple.iTunes:ORIGINALYEAR":"originalyear","----:com.apple.iTunes:RELEASEDATE":"releasedate",desc:"description",ldes:"longDescription","©mvn":"movement","©mvi":"movementIndex","©mvc":"movementTotal","©wrk":"work",catg:"category",egid:"podcastId",hdvd:"hdVideo",keyw:"keywords",shwm:"showMovement",stik:"stik",rate:"rating"},oi="iTunes";class Ot extends ve{constructor(){super([oi],ri)}postMap(e,t){switch(e.id){case"rate":e.value={source:void 0,rating:Number.parseFloat(e.value)/100};break}}}const ci={TITLE:"title",ARTIST:"artist",ARTISTS:"artists",ALBUMARTIST:"albumartist","ALBUM ARTIST":"albumartist",ALBUM:"album",DATE:"date",ORIGINALDATE:"originaldate",ORIGINALYEAR:"originalyear",RELEASEDATE:"releasedate",COMMENT:"comment",TRACKNUMBER:"track",DISCNUMBER:"disk",GENRE:"genre",METADATA_BLOCK_PICTURE:"picture",COMPOSER:"composer",LYRICS:"lyrics",ALBUMSORT:"albumsort",TITLESORT:"titlesort",WORK:"work",ARTISTSORT:"artistsort",ALBUMARTISTSORT:"albumartistsort",COMPOSERSORT:"composersort",LYRICIST:"lyricist",WRITER:"writer",CONDUCTOR:"conductor",REMIXER:"remixer",ARRANGER:"arranger",ENGINEER:"engineer",PRODUCER:"producer",DJMIXER:"djmixer",MIXER:"mixer",LABEL:"label",GROUPING:"grouping",SUBTITLE:"subtitle",DISCSUBTITLE:"discsubtitle",TRACKTOTAL:"totaltracks",DISCTOTAL:"totaldiscs",COMPILATION:"compilation",RATING:"rating",BPM:"bpm",KEY:"key",MOOD:"mood",MEDIA:"media",CATALOGNUMBER:"catalognumber",RELEASESTATUS:"releasestatus",RELEASETYPE:"releasetype",RELEASECOUNTRY:"releasecountry",SCRIPT:"script",LANGUAGE:"language",COPYRIGHT:"copyright",LICENSE:"license",ENCODEDBY:"encodedby",ENCODERSETTINGS:"encodersettings",BARCODE:"barcode",ISRC:"isrc",ASIN:"asin",MUSICBRAINZ_TRACKID:"musicbrainz_recordingid",MUSICBRAINZ_RELEASETRACKID:"musicbrainz_trackid",MUSICBRAINZ_ALBUMID:"musicbrainz_albumid",MUSICBRAINZ_ARTISTID:"musicbrainz_artistid",MUSICBRAINZ_ALBUMARTISTID:"musicbrainz_albumartistid",MUSICBRAINZ_RELEASEGROUPID:"musicbrainz_releasegroupid",MUSICBRAINZ_WORKID:"musicbrainz_workid",MUSICBRAINZ_TRMID:"musicbrainz_trmid",MUSICBRAINZ_DISCID:"musicbrainz_discid",ACOUSTID_ID:"acoustid_id",ACOUSTID_ID_FINGERPRINT:"acoustid_fingerprint",MUSICIP_PUID:"musicip_puid",WEBSITE:"website",NOTES:"notes",TOTALTRACKS:"totaltracks",TOTALDISCS:"totaldiscs",DISCOGS_ARTIST_ID:"discogs_artist_id",DISCOGS_ARTISTS:"artists",DISCOGS_ARTIST_NAME:"artists",DISCOGS_ALBUM_ARTISTS:"albumartist",DISCOGS_CATALOG:"catalognumber",DISCOGS_COUNTRY:"releasecountry",DISCOGS_DATE:"originaldate",DISCOGS_LABEL:"label",DISCOGS_LABEL_ID:"discogs_label_id",DISCOGS_MASTER_RELEASE_ID:"discogs_master_release_id",DISCOGS_RATING:"discogs_rating",DISCOGS_RELEASED:"date",DISCOGS_RELEASE_ID:"discogs_release_id",DISCOGS_VOTES:"discogs_votes",CATALOGID:"catalognumber",STYLE:"genre",REPLAYGAIN_TRACK_GAIN:"replaygain_track_gain",REPLAYGAIN_TRACK_PEAK:"replaygain_track_peak",REPLAYGAIN_ALBUM_GAIN:"replaygain_album_gain",REPLAYGAIN_ALBUM_PEAK:"replaygain_album_peak",REPLAYGAIN_MINMAX:"replaygain_track_minmax",REPLAYGAIN_ALBUM_MINMAX:"replaygain_album_minmax",REPLAYGAIN_UNDO:"replaygain_undo"};class Ue extends ${static toRating(e,t,i){return{source:e?e.toLowerCase():void 0,rating:Number.parseFloat(t)/i*$.maxRatingScore}}constructor(){super(["vorbis"],ci)}postMap(e){if(e.id==="RATING")e.value=Ue.toRating(void 0,e.value,100);else if(e.id.indexOf("RATING:")===0){const t=e.id.split(":");e.value=Ue.toRating(t[1],e.value,1),e.id=t[0]}}}const li={IART:"artist",ICRD:"date",INAM:"title",TITL:"title",IPRD:"album",ITRK:"track",IPRT:"track",COMM:"comment",ICMT:"comment",ICNT:"releasecountry",GNRE:"genre",IWRI:"writer",RATE:"rating",YEAR:"year",ISFT:"encodedby",CODE:"encodedby",TURL:"website",IGNR:"genre",IENG:"engineer",ITCH:"technician",IMED:"media",IRPD:"album"};class di extends ${constructor(){super(["exif"],li)}}const mi={"segment:title":"title","album:ARTIST":"albumartist","album:ARTISTSORT":"albumartistsort","album:TITLE":"album","album:DATE_RECORDED":"originaldate","album:DATE_RELEASED":"releasedate","album:PART_NUMBER":"disk","album:TOTAL_PARTS":"totaltracks","track:ARTIST":"artist","track:ARTISTSORT":"artistsort","track:TITLE":"title","track:PART_NUMBER":"track","track:MUSICBRAINZ_TRACKID":"musicbrainz_recordingid","track:MUSICBRAINZ_ALBUMID":"musicbrainz_albumid","track:MUSICBRAINZ_ARTISTID":"musicbrainz_artistid","track:PUBLISHER":"label","track:GENRE":"genre","track:ENCODER":"encodedby","track:ENCODER_OPTIONS":"encodersettings","edition:TOTAL_PARTS":"totaldiscs",picture:"picture"};class ui extends ve{constructor(){super(["matroska"],mi)}}const hi={NAME:"title",AUTH:"artist","(c) ":"copyright",ANNO:"comment"};class pi extends ${constructor(){super(["AIFF"],hi)}}class gi{constructor(){this.tagMappers={},[new Qa,new ii,new At,new Ot,new Ot,new Ue,new ni,new vt,new di,new ui,new pi].forEach(e=>{this.registerTagMapper(e)})}mapTag(e,t,i){if(this.tagMappers[e])return this.tagMappers[e].mapGenericTag(t,i);throw new ka(`No generic tag mapper defined for tag-format: ${e}`)}registerTagMapper(e){for(const t of e.tagTypes)this.tagMappers[t]=e}}function ki(a){const e=a.split(`
`),t=[],i=/\[(\d{2}):(\d{2})\.(\d{2})\]/;for(const s of e){const n=s.match(i);if(n){const r=Number.parseInt(n[1],10),o=Number.parseInt(n[2],10),c=Number.parseInt(n[3],10),u=(r*60+o)*1e3+c*10,p=s.replace(i,"").trim();t.push({timestamp:u,text:p})}}return{contentType:qa.lyrics,timeStampFormat:Ya.milliseconds,syncText:t}}const ne=b("music-metadata:collector"),Ti=["matroska","APEv2","vorbis","ID3v2.4","ID3v2.3","ID3v2.2","exif","asf","iTunes","AIFF","ID3v1"];class wi{constructor(e){this.format={tagTypes:[],trackInfo:[]},this.native={},this.common={track:{no:null,of:null},disk:{no:null,of:null},movementIndex:{no:null,of:null}},this.quality={warnings:[]},this.commonOrigin={},this.originPriority={},this.tagMapper=new gi,this.opts=e;let t=1;for(const i of Ti)this.originPriority[i]=t++;this.originPriority.artificial=500,this.originPriority.id3v1=600}hasAny(){return Object.keys(this.native).length>0}addStreamInfo(e){ne(`streamInfo: type=${e.type?Na[e.type]:"?"}, codec=${e.codecName}`),this.format.trackInfo.push(e)}setFormat(e,t){var i;ne(`format: ${e} = ${t}`),this.format[e]=t,(i=this.opts)!=null&&i.observer&&this.opts.observer({metadata:this,tag:{type:"format",id:e,value:t}})}async addTag(e,t,i){ne(`tag ${e}.${t} = ${i}`),this.native[e]||(this.format.tagTypes.push(e),this.native[e]=[]),this.native[e].push({id:t,value:i}),await this.toCommon(e,t,i)}addWarning(e){this.quality.warnings.push({message:e})}async postMap(e,t){switch(t.id){case"artist":if(this.commonOrigin.artist===this.originPriority[e])return this.postMap("artificial",{id:"artists",value:t.value});this.common.artists||this.setGenericTag("artificial",{id:"artists",value:t.value});break;case"artists":if((!this.common.artist||this.commonOrigin.artist===this.originPriority.artificial)&&(!this.common.artists||this.common.artists.indexOf(t.value)===-1)){const i=(this.common.artists||[]).concat([t.value]),n={id:"artist",value:Ii(i)};this.setGenericTag("artificial",n)}break;case"picture":return this.postFixPicture(t.value).then(i=>{i!==null&&(t.value=i,this.setGenericTag(e,t))});case"totaltracks":this.common.track.of=$.toIntOrNull(t.value);return;case"totaldiscs":this.common.disk.of=$.toIntOrNull(t.value);return;case"movementTotal":this.common.movementIndex.of=$.toIntOrNull(t.value);return;case"track":case"disk":case"movementIndex":{const i=this.common[t.id].of;this.common[t.id]=$.normalizeTrack(t.value),this.common[t.id].of=i??this.common[t.id].of;return}case"bpm":case"year":case"originalyear":t.value=Number.parseInt(t.value,10);break;case"date":{const i=Number.parseInt(t.value.substr(0,4),10);Number.isNaN(i)||(this.common.year=i);break}case"discogs_label_id":case"discogs_release_id":case"discogs_master_release_id":case"discogs_artist_id":case"discogs_votes":t.value=typeof t.value=="string"?Number.parseInt(t.value,10):t.value;break;case"replaygain_track_gain":case"replaygain_track_peak":case"replaygain_album_gain":case"replaygain_album_peak":t.value=Va(t.value);break;case"replaygain_track_minmax":t.value=t.value.split(",").map(i=>Number.parseInt(i,10));break;case"replaygain_undo":{const i=t.value.split(",").map(s=>Number.parseInt(s,10));t.value={leftChannel:i[0],rightChannel:i[1]};break}case"gapless":case"compilation":case"podcast":case"showMovement":t.value=t.value==="1"||t.value===1;break;case"isrc":{const i=this.common[t.id];if(i&&i.indexOf(t.value)!==-1)return;break}case"comment":typeof t.value=="string"&&(t.value={text:t.value}),t.value.descriptor==="iTunPGAP"&&this.setGenericTag(e,{id:"gapless",value:t.value.text==="1"});break;case"lyrics":typeof t.value=="string"&&(t.value=ki(t.value));break}t.value!==null&&this.setGenericTag(e,t)}toCommonMetadata(){return{format:this.format,native:this.native,quality:this.quality,common:this.common}}async postFixPicture(e){if(e.data&&e.data.length>0){if(!e.format){const t=await ha(Uint8Array.from(e.data));if(t)e.format=t.mime;else return null}switch(e.format=e.format.toLocaleLowerCase(),e.format){case"image/jpg":e.format="image/jpeg"}return e}return this.addWarning("Empty picture tag found"),null}async toCommon(e,t,i){const s={id:t,value:i},n=this.tagMapper.mapTag(e,s,this);n&&await this.postMap(e,n)}setGenericTag(e,t){var n;ne(`common.${t.id} = ${t.value}`);const i=this.commonOrigin[t.id]||1e3,s=this.originPriority[e];if(Ka(t.id))if(s<=i)this.common[t.id]=t.value,this.commonOrigin[t.id]=s;else return ne(`Ignore native tag (singleton): ${e}.${t.id} = ${t.value}`);else if(s===i)!Za(t.id)||this.common[t.id].indexOf(t.value)===-1?this.common[t.id].push(t.value):ne(`Ignore duplicate value: ${e}.${t.id} = ${t.value}`);else if(s<i)this.common[t.id]=[t.value],this.commonOrigin[t.id]=s;else return ne(`Ignore native tag (list): ${e}.${t.id} = ${t.value}`);(n=this.opts)!=null&&n.observer&&this.opts.observer({metadata:this,tag:{type:"common",id:t.id,value:t.value}})}}function Ii(a){return a.length>2?`${a.slice(0,a.length-1).join(", ")} & ${a[a.length-1]}`:a.join(" & ")}const Si="modulepreload",bi=function(a){return"/"+a},Bt={},G=function(e,t,i){let s=Promise.resolve();if(t&&t.length>0){let r=function(u){return Promise.all(u.map(p=>Promise.resolve(p).then(h=>({status:"fulfilled",value:h}),h=>({status:"rejected",reason:h}))))};document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),c=(o==null?void 0:o.nonce)||(o==null?void 0:o.getAttribute("nonce"));s=r(t.map(u=>{if(u=bi(u),u in Bt)return;Bt[u]=!0;const p=u.endsWith(".css"),h=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${u}"]${h}`))return;const I=document.createElement("link");if(I.rel=p?"stylesheet":Si,p||(I.as="script"),I.crossOrigin="",I.href=u,c&&I.setAttribute("nonce",c),document.head.appendChild(I),p)return new Promise((z,se)=>{I.addEventListener("load",z),I.addEventListener("error",()=>se(new Error(`Unable to preload CSS for ${u}`)))})}))}function n(r){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=r,window.dispatchEvent(o),!o.defaultPrevented)throw r}return s.then(r=>{for(const o of r||[])o.status==="rejected"&&n(o.reason);return e().catch(n)})},yi={parserType:"mpeg",extensions:[".mp2",".mp3",".m2a",".aac","aacp"],mimeTypes:["audio/mpeg","audio/mp3","audio/aacs","audio/aacp"],async load(){return(await G(async()=>{const{MpegParser:a}=await Promise.resolve().then(()=>ts);return{MpegParser:a}},void 0)).MpegParser}},fi={parserType:"apev2",extensions:[".ape"],mimeTypes:["audio/ape","audio/monkeys-audio"],async load(){return(await G(async()=>{const{APEv2Parser:a}=await Promise.resolve().then(()=>$i);return{APEv2Parser:a}},void 0)).APEv2Parser}},Ci={parserType:"asf",extensions:[".asf"],mimeTypes:["audio/ms-wma","video/ms-wmv","audio/ms-asf","video/ms-asf","application/vnd.ms-asf"],async load(){return(await G(async()=>{const{AsfParser:a}=await Promise.resolve().then(()=>ps);return{AsfParser:a}},void 0)).AsfParser}},Ai={parserType:"dsdiff",extensions:[".dff"],mimeTypes:["audio/dsf","audio/dsd"],async load(){return(await G(async()=>{const{DsdiffParser:a}=await Promise.resolve().then(()=>ks);return{DsdiffParser:a}},void 0)).DsdiffParser}},vi={parserType:"aiff",extensions:[".aif","aiff","aifc"],mimeTypes:["audio/aiff","audio/aif","audio/aifc","application/aiff"],async load(){return(await G(async()=>{const{AIFFParser:a}=await Promise.resolve().then(()=>Ss);return{AIFFParser:a}},void 0)).AIFFParser}},xi={parserType:"dsf",extensions:[".dsf"],mimeTypes:["audio/dsf"],async load(){return(await G(async()=>{const{DsfParser:a}=await Promise.resolve().then(()=>Cs);return{DsfParser:a}},void 0)).DsfParser}},Pi={parserType:"flac",extensions:[".flac"],mimeTypes:["audio/flac"],async load(){return(await G(async()=>{const{FlacParser:a}=await Promise.resolve().then(()=>Es);return{FlacParser:a}},void 0)).FlacParser}},Ei={parserType:"matroska",extensions:[".mka",".mkv",".mk3d",".mks","webm"],mimeTypes:["audio/matroska","audio/webm","video/webm"],async load(){return(await G(async()=>{const{MatroskaParser:a}=await Promise.resolve().then(()=>Ms);return{MatroskaParser:a}},void 0)).MatroskaParser}},Di={parserType:"mp4",extensions:[".mp4",".m4a",".m4b",".m4pa","m4v","m4r","3gp"],mimeTypes:["audio/mp4","audio/m4a","video/m4v","video/mp4"],async load(){return(await G(async()=>{const{MP4Parser:a}=await Promise.resolve().then(()=>Js);return{MP4Parser:a}},void 0)).MP4Parser}},zi={parserType:"musepack",extensions:[".mpc"],mimeTypes:["audio/musepack"],async load(){return(await G(async()=>{const{MusepackParser:a}=await Promise.resolve().then(()=>cn);return{MusepackParser:a}},void 0)).MusepackParser}},Fi={parserType:"ogg",extensions:[".ogg",".ogv",".oga",".ogm",".ogx",".opus",".spx"],mimeTypes:["audio/ogg","audio/opus","audio/speex","video/ogg"],async load(){return(await G(async()=>{const{OggParser:a}=await Promise.resolve().then(()=>kn);return{OggParser:a}},void 0)).OggParser}},_i={parserType:"wavpack",extensions:[".wv",".wvp"],mimeTypes:["audio/wavpack"],async load(){return(await G(async()=>{const{WavPackParser:a}=await Promise.resolve().then(()=>In);return{WavPackParser:a}},void 0)).WavPackParser}},Mi={parserType:"riff",extensions:[".wav","wave",".bwf"],mimeTypes:["audio/vnd.wave","audio/wav","audio/wave"],async load(){return(await G(async()=>{const{WaveParser:a}=await Promise.resolve().then(()=>An);return{WaveParser:a}},void 0)).WaveParser}},re=b("music-metadata:parser:factory");function Ri(a){const e=Fa.parse(a),t=_a.parse(e.type);return{type:t.type,subtype:t.subtype,suffix:t.suffix,parameters:e.parameters}}class Oi{constructor(){this.parsers=[],[Pi,yi,fi,Di,Ei,Mi,Fi,Ci,vi,_i,zi,xi,Ai].forEach(e=>this.registerParser(e))}registerParser(e){this.parsers.push(e)}async parse(e,t,i){if(e.supportsRandomAccess()?(re("tokenizer supports random-access, scanning for appending headers"),await Wi(e,i)):re("tokenizer does not support random-access, cannot scan for appending headers"),!t){const o=new Uint8Array(4100);if(e.fileInfo.mimeType&&(t=this.findLoaderForContentType(e.fileInfo.mimeType)),!t&&e.fileInfo.path&&(t=this.findLoaderForExtension(e.fileInfo.path)),!t){re("Guess parser on content..."),await e.peekBuffer(o,{mayBeLess:!0});const c=await ha(o);if(!c||!c.mime)throw new $a("Failed to determine audio format");if(re(`Guessed file type is mime=${c.mime}, extension=${c.ext}`),t=this.findLoaderForContentType(c.mime),!t)throw new Ua(`Guessed MIME-type not supported: ${c.mime}`)}}re(`Loading ${t.parserType} parser...`);const s=new wi(i),n=await t.load(),r=new n(s,e,i??{});return re(`Parser ${t.parserType} loaded`),await r.parse(),s.toCommonMetadata()}findLoaderForExtension(e){if(!e)return;const t=Bi(e).toLocaleLowerCase()||e;return this.parsers.find(i=>i.extensions.indexOf(t)!==-1)}findLoaderForContentType(e){let t;if(!e)return;try{t=Ri(e)}catch{re(`Invalid HTTP Content-Type header value: ${e}`);return}const i=t.subtype.indexOf("x-")===0?t.subtype.substring(2):t.subtype;return this.parsers.find(s=>s.mimeTypes.find(n=>n.indexOf(`${t.type}/${i}`)!==-1))}getSupportedMimeTypes(){const e=new Set;return this.parsers.forEach(t=>{t.mimeTypes.forEach(i=>{e.add(i),e.add(i.replace("/","/x-"))})}),Array.from(e)}}function Bi(a){const e=a.lastIndexOf(".");return e===-1?"":a.slice(e)}class X{constructor(e,t,i){this.metadata=e,this.tokenizer=t,this.options=i}}const Li=/^[\x21-\x7e©][\x20-\x7e\x00()]{3}/,f={len:4,get:(a,e)=>{const t=bt(a.slice(e,e+f.len),"latin1");if(!t.match(Li))throw new ft(`FourCC contains invalid characters: ${ja(t)} "${t}"`);return t},put:(a,e,t)=>{const i=Ba(t);if(i.length!==4)throw new ka("Invalid length");return a.set(i,e),e+4}},xe={text_utf8:0,binary:1,external_info:2,reserved:3},Lt={len:52,get:(a,e)=>({ID:f.get(a,e),version:g.get(a,e+4)/1e3,descriptorBytes:g.get(a,e+8),headerBytes:g.get(a,e+12),seekTableBytes:g.get(a,e+16),headerDataBytes:g.get(a,e+20),apeFrameDataBytes:g.get(a,e+24),apeFrameDataBytesHigh:g.get(a,e+28),terminatingDataBytes:g.get(a,e+32),fileMD5:new F(16).get(a,e+36)})},Ni={len:24,get:(a,e)=>({compressionLevel:y.get(a,e),formatFlags:y.get(a,e+2),blocksPerFrame:g.get(a,e+4),finalFrameBlocks:g.get(a,e+8),totalFrames:g.get(a,e+12),bitsPerSample:y.get(a,e+16),channel:y.get(a,e+18),sampleRate:g.get(a,e+20)})},_={len:32,get:(a,e)=>({ID:new T(8,"ascii").get(a,e),version:g.get(a,e+8),size:g.get(a,e+12),fields:g.get(a,e+16),flags:Sa(g.get(a,e+20))})},et={len:8,get:(a,e)=>({size:g.get(a,e),flags:Sa(g.get(a,e+4))})};function Sa(a){return{containsHeader:Pe(a,31),containsFooter:Pe(a,30),isHeader:Pe(a,29),readOnly:Pe(a,0),dataType:(a&6)>>1}}function Pe(a,e){return(a&1<<e)!==0}const Q=b("music-metadata:parser:APEv2"),Nt="APEv2",$t="APETAGEX";class Oe extends E("APEv2"){}class V extends X{constructor(){super(...arguments),this.ape={}}static tryParseApeHeader(e,t,i){return new V(e,t,i).tryParseApeHeader()}static calculateDuration(e){let t=e.totalFrames>1?e.blocksPerFrame*(e.totalFrames-1):0;return t+=e.finalFrameBlocks,t/e.sampleRate}static async findApeFooterOffset(e,t){const i=new Uint8Array(_.len),s=e.position;if(t<=_.len){Q(`Offset is too small to read APE footer: offset=${t}`);return}if(t>_.len){await e.readBuffer(i,{position:t-_.len}),e.setPosition(s);const n=_.get(i,0);if(n.ID==="APETAGEX")return n.flags.isHeader?Q(`APE Header found at offset=${t-_.len}`):(Q(`APE Footer found at offset=${t-_.len}`),t-=n.size),{footer:n,offset:t}}}static parseTagFooter(e,t,i){const s=_.get(t,t.length-_.len);if(s.ID!==$t)throw new Oe("Unexpected APEv2 Footer ID preamble value");return ye(t),new V(e,ye(t),i).parseTags(s)}async tryParseApeHeader(){if(this.tokenizer.fileInfo.size&&this.tokenizer.fileInfo.size-this.tokenizer.position<_.len){Q("No APEv2 header found, end-of-file reached");return}const e=await this.tokenizer.peekToken(_);if(e.ID===$t)return await this.tokenizer.ignore(_.len),this.parseTags(e);if(Q(`APEv2 header not found at offset=${this.tokenizer.position}`),this.tokenizer.fileInfo.size){const t=this.tokenizer.fileInfo.size-this.tokenizer.position,i=new Uint8Array(t);return await this.tokenizer.readBuffer(i),V.parseTagFooter(this.metadata,i,this.options)}}async parse(){const e=await this.tokenizer.readToken(Lt);if(e.ID!=="MAC ")throw new Oe("Unexpected descriptor ID");this.ape.descriptor=e;const t=e.descriptorBytes-Lt.len,i=await(t>0?this.parseDescriptorExpansion(t):this.parseHeader());return await this.tokenizer.ignore(i.forwardBytes),this.tryParseApeHeader()}async parseTags(e){const t=new Uint8Array(256);let i=e.size-_.len;Q(`Parse APE tags at offset=${this.tokenizer.position}, size=${i}`);for(let s=0;s<e.fields;s++){if(i<et.len){this.metadata.addWarning(`APEv2 Tag-header: ${e.fields-s} items remaining, but no more tag data to read.`);break}const n=await this.tokenizer.readToken(et);i-=et.len+n.size,await this.tokenizer.peekBuffer(t,{length:Math.min(t.length,i)});let r=R(t,0,t.length);const o=await this.tokenizer.readToken(new T(r,"ascii"));switch(await this.tokenizer.ignore(1),i-=o.length+1,n.flags.dataType){case xe.text_utf8:{const u=(await this.tokenizer.readToken(new T(n.size,"utf8"))).split(/\x00/g);await Promise.all(u.map(p=>this.metadata.addTag(Nt,o,p)));break}case xe.binary:if(this.options.skipCovers)await this.tokenizer.ignore(n.size);else{const c=new Uint8Array(n.size);await this.tokenizer.readBuffer(c),r=R(c,0,c.length);const u=bt(c.slice(0,r)),p=c.slice(r+1);await this.metadata.addTag(Nt,o,{description:u,data:p})}break;case xe.external_info:Q(`Ignore external info ${o}`),await this.tokenizer.ignore(n.size);break;case xe.reserved:Q(`Ignore external info ${o}`),this.metadata.addWarning(`APEv2 header declares a reserved datatype for "${o}"`),await this.tokenizer.ignore(n.size);break}}}async parseDescriptorExpansion(e){return await this.tokenizer.ignore(e),this.parseHeader()}async parseHeader(){const e=await this.tokenizer.readToken(Ni);if(this.metadata.setFormat("lossless",!0),this.metadata.setFormat("container","Monkey's Audio"),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("numberOfChannels",e.channel),this.metadata.setFormat("duration",V.calculateDuration(e)),!this.ape.descriptor)throw new Oe("Missing APE descriptor");return{forwardBytes:this.ape.descriptor.seekTableBytes+this.ape.descriptor.headerDataBytes+this.ape.descriptor.apeFrameDataBytes+this.ape.descriptor.terminatingDataBytes}}}const $i=Object.freeze(Object.defineProperty({__proto__:null,APEv2Parser:V,ApeContentError:Oe},Symbol.toStringTag,{value:"Module"})),Ee=b("music-metadata:parser:ID3v1"),Ge=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"],De={len:128,get:(a,e)=>{const t=new pe(3).get(a,e);return t==="TAG"?{header:t,title:new pe(30).get(a,e+3),artist:new pe(30).get(a,e+33),album:new pe(30).get(a,e+63),year:new pe(4).get(a,e+93),comment:new pe(28).get(a,e+97),zeroByte:w.get(a,e+127),track:w.get(a,e+126),genre:w.get(a,e+127)}:null}};class pe{constructor(e){this.len=e,this.stringType=new T(e,"latin1")}get(e,t){let i=this.stringType.get(e,t);return i=Ta(i),i=i.trim(),i.length>0?i:void 0}}class xt extends X{constructor(e,t,i){super(e,t,i),this.apeHeader=i.apeHeader}static getGenre(e){if(e<Ge.length)return Ge[e]}async parse(){if(!this.tokenizer.fileInfo.size){Ee("Skip checking for ID3v1 because the file-size is unknown");return}this.apeHeader&&(this.tokenizer.ignore(this.apeHeader.offset-this.tokenizer.position),await new V(this.metadata,this.tokenizer,this.options).parseTags(this.apeHeader.footer));const e=this.tokenizer.fileInfo.size-De.len;if(this.tokenizer.position>e){Ee("Already consumed the last 128 bytes");return}const t=await this.tokenizer.readToken(De,e);if(t){Ee("ID3v1 header found at: pos=%s",this.tokenizer.fileInfo.size-De.len);const i=["title","artist","album","comment","track","year"];for(const n of i)t[n]&&t[n]!==""&&await this.addTag(n,t[n]);const s=xt.getGenre(t.genre);s&&await this.addTag("genre",s)}else Ee("ID3v1 header not found at: pos=%s",this.tokenizer.fileInfo.size-De.len)}async addTag(e,t){await this.metadata.addTag("ID3v1",e,t)}}async function Ui(a){if(a.fileInfo.size>=128){const e=new Uint8Array(3),t=a.position;return await a.readBuffer(e,{position:a.fileInfo.size-128}),a.setPosition(t),new TextDecoder("latin1").decode(e)==="TAG"}return!1}const Gi="LYRICS200";async function Xi(a){const e=a.fileInfo.size;if(e>=143){const t=new Uint8Array(15),i=a.position;await a.readBuffer(t,{position:e-143}),a.setPosition(i);const s=new TextDecoder("latin1").decode(t);if(s.slice(6)===Gi)return Number.parseInt(s.slice(0,6),10)+15}return 0}async function Rn(a,e={}){const t={mimeType:a.type,size:a.size};return a instanceof File&&(t.path=a.name),ji(a.stream(),t,e)}async function ji(a,e,t={}){const i=za(a,{fileInfo:typeof e=="string"?{mimeType:e}:e});try{return await Hi(i,t)}finally{await i.close()}}function Hi(a,e){return new Oi().parse(a,void 0,e)}async function Wi(a,e={}){let t=a.fileInfo.size;if(await Ui(a)){t-=128;const i=await Xi(a);t-=i}e.apeHeader=await V.findApeFooterOffset(a,t)}const Ut=b("music-metadata:id3v2:frame-parser"),j="latin1";function Vi(a){const e=[];let t,i="";for(const s of a)if(typeof t=="string")if(s==="("&&t==="")i+="(",t=void 0;else if(s===")"){i!==""&&(e.push(i),i="");const n=Gt(t);n&&e.push(n),t=void 0}else t+=s;else s==="("?t="":i+=s;return i&&(e.length===0&&i.match(/^\d*$/)&&(i=Gt(i)),i&&e.push(i)),e}function Gt(a){if(a==="RX")return"Remix";if(a==="CR")return"Cover";if(a.match(/^\d*$/))return Ge[Number.parseInt(a)]}class O{constructor(e,t){this.major=e,this.warningCollector=t}readData(e,t,i){if(e.length===0){this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${t}`);return}const{encoding:s,bom:n}=Ia.get(e,0),r=e.length;let o=0,c=[];const u=O.getNullTerminatorLength(s);let p;switch(Ut(`Parsing tag type=${t}, encoding=${s}, bom=${n}`),t!=="TXXX"&&t[0]==="T"?"T*":t){case"T*":case"GRP1":case"IPLS":case"MVIN":case"MVNM":case"PCS":case"PCST":{let h;try{h=x(e.slice(1),s).replace(/\x00+$/,"")}catch(I){if(I instanceof Error){this.warningCollector.addWarning(`id3v2.${this.major} type=${t} header has invalid string value: ${I.message}`);break}throw I}switch(t){case"TMCL":case"TIPL":case"IPLS":c=O.functionList(this.splitValue(t,h));break;case"TRK":case"TRCK":case"TPOS":c=h;break;case"TCOM":case"TEXT":case"TOLY":case"TOPE":case"TPE1":case"TSRC":c=this.splitValue(t,h);break;case"TCO":case"TCON":c=this.splitValue(t,h).map(I=>Vi(I)).reduce((I,z)=>I.concat(z),[]);break;case"PCS":case"PCST":c=this.major>=4?this.splitValue(t,h):[h],c=Array.isArray(c)&&c[0]===""?1:0;break;default:c=this.major>=4?this.splitValue(t,h):[h]}break}case"TXXX":{const h=O.readIdentifierAndData(e,o+1,r,s);c={description:h.id,text:this.splitValue(t,x(h.data,s).replace(/\x00+$/,""))};break}case"PIC":case"APIC":if(i){const h={};switch(o+=1,this.major){case 2:h.format=x(e.slice(o,o+3),"latin1"),o+=3;break;case 3:case 4:p=R(e,o,r,j),h.format=x(e.slice(o,p),j),o=p+1;break;default:throw qi(this.major)}h.format=O.fixPictureMimeType(h.format),h.type=Ct[e[o]],o+=1,p=R(e,o,r,s),h.description=x(e.slice(o,p),s),o=p+u,h.data=e.slice(o,r),c=h}break;case"CNT":case"PCNT":c=k.get(e,0);break;case"SYLT":{const h=Rt.get(e,0);o+=Rt.len;const I={descriptor:"",language:h.language,contentType:h.contentType,timeStampFormat:h.timeStampFormat,syncText:[]};let z=!1;for(;o<r;){const se=O.readNullTerminatedString(e.subarray(o),h.encoding);if(o+=se.len,z){const Da=k.get(e,o);o+=k.len,I.syncText.push({text:se.text,timestamp:Da})}else I.descriptor=se.text,z=!0}c=I;break}case"ULT":case"USLT":case"COM":case"COMM":{const h=ht.get(e,o);o+=ht.len;const I=O.readNullTerminatedString(e.subarray(o),h.encoding);o+=I.len;const z=O.readNullTerminatedString(e.subarray(o),h.encoding);c={language:h.language,descriptor:I.text,text:z.text};break}case"UFID":{const h=O.readIdentifierAndData(e,o,r,j);c={owner_identifier:h.id,identifier:h.data};break}case"PRIV":{const h=O.readIdentifierAndData(e,o,r,j);c={owner_identifier:h.id,data:h.data};break}case"POPM":{p=R(e,o,r,j);const h=x(e.slice(o,p),j);o=p+1;const I=r-o;c={email:h,rating:w.get(e,o),counter:I>=5?k.get(e,o+1):void 0};break}case"GEOB":{p=R(e,o+1,r,s);const h=x(e.slice(o+1,p),j);o=p+1,p=R(e,o,r,s);const I=x(e.slice(o,p),j);o=p+1,p=R(e,o,r,s);const z=x(e.slice(o,p),j);o=p+1,c={type:h,filename:I,description:z,data:e.slice(o,r)};break}case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":p=R(e,o+1,r,s),c=x(e.slice(o,p),j);break;case"WXXX":{p=R(e,o+1,r,s);const h=x(e.slice(o+1,p),s);o=p+(s==="utf-16le"?2:1),c={description:h,url:x(e.slice(o,r),j)};break}case"WFD":case"WFED":c=x(e.slice(o+1,R(e,o+1,r,s)),s);break;case"MCDI":{c=e.slice(0,r);break}default:Ut(`Warning: unsupported id3v2-tag-type: ${t}`);break}return c}static readNullTerminatedString(e,t){let i=t.bom?2:0;const s=R(e,i,e.length,t.encoding),n=e.slice(i,s);return t.encoding==="utf-16le"?i=s+2:i=s+1,{text:x(n,t.encoding),len:i}}static fixPictureMimeType(e){switch(e=e.toLocaleLowerCase(),e){case"jpg":return"image/jpeg";case"png":return"image/png"}return e}static functionList(e){const t={};for(let i=0;i+1<e.length;i+=2){const s=e[i+1].split(",");t[e[i]]=t[e[i]]?t[e[i]].concat(s):s}return t}splitValue(e,t){let i;return this.major<4?(i=t.split(/\x00/g),i.length>1?this.warningCollector.addWarning(`ID3v2.${this.major} ${e} uses non standard null-separator.`):i=t.split(/\//g)):i=t.split(/\x00/g),O.trimArray(i)}static trimArray(e){return e.map(t=>t.replace(/\x00+$/,"").trim())}static readIdentifierAndData(e,t,i,s){const n=R(e,t,i,s),r=x(e.slice(t,n),s);return t=n+O.getNullTerminatorLength(s),{id:r,data:e.slice(t,i)}}static getNullTerminatorLength(e){return e==="utf-16le"?2:1}}class Pt extends E("id3v2"){}function qi(a){throw new Pt(`Unexpected majorVer: ${a}`)}const Xt=new TextDecoder("ascii");class W{constructor(){this.tokenizer=void 0,this.id3Header=void 0,this.metadata=void 0,this.headerType=void 0,this.options=void 0}static removeUnsyncBytes(e){let t=0,i=0;for(;t<e.length-1;)t!==i&&(e[i]=e[t]),t+=e[t]===255&&e[t+1]===0?2:1,i++;return t<e.length&&(e[i++]=e[t]),e.slice(0,i)}static getFrameHeaderLength(e){switch(e){case 2:return 6;case 3:case 4:return 10;default:throw tt(e)}}static readFrameFlags(e){return{status:{tag_alter_preservation:A(e,0,6),file_alter_preservation:A(e,0,5),read_only:A(e,0,4)},format:{grouping_identity:A(e,1,7),compression:A(e,1,3),encryption:A(e,1,2),unsynchronisation:A(e,1,1),data_length_indicator:A(e,1,0)}}}static readFrameData(e,t,i,s,n){var o,c;const r=new O(i,n);switch(i){case 2:return r.readData(e,t.id,s);case 3:case 4:return(o=t.flags)!=null&&o.format.unsynchronisation&&(e=W.removeUnsyncBytes(e)),(c=t.flags)!=null&&c.format.data_length_indicator&&(e=e.slice(4,e.length)),r.readData(e,t.id,s);default:throw tt(i)}}static makeDescriptionTagName(e,t){return e+(t?`:${t}`:"")}async parse(e,t,i){this.tokenizer=t,this.metadata=e,this.options=i;const s=await this.tokenizer.readToken(ut);if(s.fileIdentifier!=="ID3")throw new Pt("expected ID3-header file-identifier 'ID3' was not found");return this.id3Header=s,this.headerType=`ID3v2.${s.version.major}`,s.flags.isExtendedHeader?this.parseExtendedHeader():this.parseId3Data(s.size)}async parseExtendedHeader(){const e=await this.tokenizer.readToken(Mt),t=e.size-Mt.len;return t>0?this.parseExtendedHeaderData(t,e.size):this.parseId3Data(this.id3Header.size-e.size)}async parseExtendedHeaderData(e,t){return await this.tokenizer.ignore(e),this.parseId3Data(this.id3Header.size-t)}async parseId3Data(e){const t=await this.tokenizer.readToken(new F(e));for(const i of this.parseMetadata(t))switch(i.id){case"TXXX":i.value&&await this.handleTag(i,i.value.text,()=>i.value.description);break;default:await(Array.isArray(i.value)?Promise.all(i.value.map(s=>this.addTag(i.id,s))):this.addTag(i.id,i.value))}}async handleTag(e,t,i,s=n=>n){await Promise.all(t.map(n=>this.addTag(W.makeDescriptionTagName(e.id,i(n)),s(n))))}async addTag(e,t){await this.metadata.addTag(this.headerType,e,t)}parseMetadata(e){let t=0;const i=[];for(;t!==e.length;){const s=W.getFrameHeaderLength(this.id3Header.version.major);if(t+s>e.length){this.metadata.addWarning("Illegal ID3v2 tag length");break}const n=e.slice(t,t+s);t+=s;const r=this.readFrameHeader(n,this.id3Header.version.major),o=e.slice(t,t+r.length);t+=r.length;const c=W.readFrameData(o,r,this.id3Header.version.major,!this.options.skipCovers,this.metadata);c&&i.push({id:r.id,value:c})}return i}readFrameHeader(e,t){let i;switch(t){case 2:i={id:Xt.decode(e.slice(0,3)),length:U.get(e,3)},i.id.match(/[A-Z0-9]{3}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${i.id}`);break;case 3:case 4:i={id:Xt.decode(e.slice(0,4)),length:(t===4?wa:k).get(e,4),flags:W.readFrameFlags(e.slice(8,10))},i.id.match(/[A-Z0-9]{4}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${i.id}`);break;default:throw tt(t)}return i}}function tt(a){throw new Pt(`Unexpected majorVer: ${a}`)}const at=b("music-metadata:parser:ID3");class Ke extends X{constructor(){super(...arguments),this.id3parser=new W}static async startsWithID3v2Header(e){return(await e.peekToken(ut)).fileIdentifier==="ID3"}async parse(){try{await this.parseID3v2()}catch(e){if(e instanceof ie)at("End-of-stream");else throw e}}finalize(){}async parseID3v2(){await this.tryReadId3v2Headers(),at("End of ID3v2 header, go to MPEG-parser: pos=%s",this.tokenizer.position),await this.postId3v2Parse(),this.options.skipPostHeaders&&this.metadata.hasAny()?this.finalize():(await new xt(this.metadata,this.tokenizer,this.options).parse(),this.finalize())}async tryReadId3v2Headers(){if((await this.tokenizer.peekToken(ut)).fileIdentifier==="ID3")return at("Found ID3v2 header, pos=%s",this.tokenizer.position),await this.id3parser.parse(this.metadata,this.tokenizer,this.options),this.tryReadId3v2Headers()}}const jt={len:2,get:(a,e)=>{const t=S(a,e,0,3),i=S(a,e,6,1),s=S(a,e,7,9)/10;if(t>0)return{type:S(a,e,0,3),origin:S(a,e,3,3),adjustment:i?-s:s}}},Yi={len:27,get:(a,e)=>{const t=k.get(a,e+2);return{revision:S(a,e,0,4),vbr_method:S(a,e,4,4),lowpass_filter:100*w.get(a,e+1),track_peak:t===0?null:t/2**23,track_gain:jt.get(a,6),album_gain:jt.get(a,8),music_length:k.get(a,e+20),music_crc:w.get(a,e+24),header_crc:C.get(a,e+24)}}},Ht=new T(4,"ascii"),it=new T(6,"ascii"),Ki={len:4,get:(a,e)=>({frames:N(a,e,31),bytes:N(a,e,30),toc:N(a,e,29),vbrScale:N(a,e,28)})};async function Zi(a){const e=await a.readToken(Ki),t={numFrames:null,streamSize:null,vbrScale:null};if(e.frames&&(t.numFrames=await a.readToken(k)),e.bytes&&(t.streamSize=await a.readToken(k)),e.toc&&(t.toc=new Uint8Array(100),await a.readBuffer(t.toc)),e.vbrScale&&(t.vbrScale=await a.readToken(k)),await a.peekToken(new T(4,"ascii"))==="LAME"){await a.ignore(4),t.lame={version:await a.readToken(new T(5,"ascii"))};const s=t.lame.version.match(/\d+.\d+/g);if(s!==null){const r=s[0].split(".").map(o=>Number.parseInt(o,10));r[0]>=3&&r[1]>=90&&(t.lame.extended=await a.readToken(Yi))}}return t}const B=b("music-metadata:parser:mpeg");class fe extends E("MPEG"){}const Wt=1024,Vt={AudioObjectTypes:["AAC Main","AAC LC","AAC SSR","AAC LTP"],SamplingFrequencies:[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350,null,null,-1]},Ji=[void 0,["front-center"],["front-left","front-right"],["front-center","front-left","front-right"],["front-center","front-left","front-right","back-center"],["front-center","front-left","front-right","back-left","back-right"],["front-center","front-left","front-right","back-left","back-right","LFE-channel"],["front-center","front-left","front-right","side-left","side-right","back-left","back-right","LFE-channel"]];class P{constructor(e,t){this.bitrateIndex=null,this.sampRateFreqIndex=null,this.padding=null,this.privateBit=null,this.channelModeIndex=null,this.modeExtension=null,this.isOriginalMedia=null,this.version=null,this.bitrate=null,this.samplingRate=null,this.frameLength=0,this.versionIndex=S(e,t+1,3,2),this.layer=P.LayerDescription[S(e,t+1,5,2)],this.versionIndex>1&&this.layer===0?this.parseAdtsHeader(e,t):this.parseMpegHeader(e,t),this.isProtectedByCRC=!N(e,t+1,7)}calcDuration(e){return this.samplingRate==null?null:e*this.calcSamplesPerFrame()/this.samplingRate}calcSamplesPerFrame(){return P.samplesInFrameTable[this.version===1?0:1][this.layer]}calculateSideInfoLength(){if(this.layer!==3)return 2;if(this.channelModeIndex===3){if(this.version===1)return 17;if(this.version===2||this.version===2.5)return 9}else{if(this.version===1)return 32;if(this.version===2||this.version===2.5)return 17}return null}calcSlotSize(){return[null,4,1,1][this.layer]}parseMpegHeader(e,t){this.container="MPEG",this.bitrateIndex=S(e,t+2,0,4),this.sampRateFreqIndex=S(e,t+2,4,2),this.padding=N(e,t+2,6),this.privateBit=N(e,t+2,7),this.channelModeIndex=S(e,t+3,0,2),this.modeExtension=S(e,t+3,2,2),this.isCopyrighted=N(e,t+3,4),this.isOriginalMedia=N(e,t+3,5),this.emphasis=S(e,t+3,7,2),this.version=P.VersionID[this.versionIndex],this.channelMode=P.ChannelMode[this.channelModeIndex],this.codec=`MPEG ${this.version} Layer ${this.layer}`;const i=this.calcBitrate();if(!i)throw new fe("Cannot determine bit-rate");if(this.bitrate=i*1e3,this.samplingRate=this.calcSamplingRate(),this.samplingRate==null)throw new fe("Cannot determine sampling-rate")}parseAdtsHeader(e,t){B("layer=0 => ADTS"),this.version=this.versionIndex===2?4:2,this.container=`ADTS/MPEG-${this.version}`;const i=S(e,t+2,0,2);this.codec="AAC",this.codecProfile=Vt.AudioObjectTypes[i],B(`MPEG-4 audio-codec=${this.codec}`);const s=S(e,t+2,2,4);this.samplingRate=Vt.SamplingFrequencies[s],B(`sampling-rate=${this.samplingRate}`);const n=S(e,t+2,7,3);this.mp4ChannelConfig=Ji[n],B(`channel-config=${this.mp4ChannelConfig?this.mp4ChannelConfig.join("+"):"?"}`),this.frameLength=S(e,t+3,6,2)<<11}calcBitrate(){if(this.bitrateIndex===0||this.bitrateIndex===15)return null;if(this.version&&this.bitrateIndex){const e=10*Math.floor(this.version)+this.layer;return P.bitrate_index[this.bitrateIndex][e]}return null}calcSamplingRate(){return this.sampRateFreqIndex===3||this.version===null||this.sampRateFreqIndex==null?null:P.sampling_rate_freq_index[this.version][this.sampRateFreqIndex]}}P.SyncByte1=255;P.SyncByte2=224;P.VersionID=[2.5,null,2,1];P.LayerDescription=[0,3,2,1];P.ChannelMode=["stereo","joint_stereo","dual_channel","mono"];P.bitrate_index={1:{11:32,12:32,13:32,21:32,22:8,23:8},2:{11:64,12:48,13:40,21:48,22:16,23:16},3:{11:96,12:56,13:48,21:56,22:24,23:24},4:{11:128,12:64,13:56,21:64,22:32,23:32},5:{11:160,12:80,13:64,21:80,22:40,23:40},6:{11:192,12:96,13:80,21:96,22:48,23:48},7:{11:224,12:112,13:96,21:112,22:56,23:56},8:{11:256,12:128,13:112,21:128,22:64,23:64},9:{11:288,12:160,13:128,21:144,22:80,23:80},10:{11:320,12:192,13:160,21:160,22:96,23:96},11:{11:352,12:224,13:192,21:176,22:112,23:112},12:{11:384,12:256,13:224,21:192,22:128,23:128},13:{11:416,12:320,13:256,21:224,22:144,23:144},14:{11:448,12:384,13:320,21:256,22:160,23:160}};P.sampling_rate_freq_index={1:{0:44100,1:48e3,2:32e3},2:{0:22050,1:24e3,2:16e3},2.5:{0:11025,1:12e3,2:8e3}};P.samplesInFrameTable=[[0,384,1152,1152],[0,384,1152,576]];const qt={len:4,get:(a,e)=>new P(a,e)};function Qi(a){return`V${Math.floor((100-a)/10)}`}class es extends Ke{constructor(){super(...arguments),this.frameCount=0,this.syncFrameCount=-1,this.countSkipFrameData=0,this.totalDataLength=0,this.bitrates=[],this.offset=0,this.frame_size=0,this.crc=null,this.calculateEofDuration=!1,this.samplesPerFrame=null,this.buf_frame_header=new Uint8Array(4),this.mpegOffset=null,this.syncPeek={buf:new Uint8Array(Wt),len:0}}async postId3v2Parse(){this.metadata.setFormat("lossless",!1);try{let e=!1;for(;!e;)await this.sync(),e=await this.parseCommonMpegHeader()}catch(e){if(e instanceof ie){if(B("End-of-stream"),this.calculateEofDuration&&this.samplesPerFrame!==null){const t=this.frameCount*this.samplesPerFrame;if(this.metadata.setFormat("numberOfSamples",t),this.metadata.format.sampleRate){const i=t/this.metadata.format.sampleRate;B(`Calculate duration at EOF: ${i} sec.`,i),this.metadata.setFormat("duration",i)}}}else throw e}}finalize(){const e=this.metadata.format,t=!!this.metadata.native.ID3v1;if(this.mpegOffset!==null){if(e.duration&&this.tokenizer.fileInfo.size){const i=this.tokenizer.fileInfo.size-this.mpegOffset-(t?128:0);e.codecProfile&&e.codecProfile[0]==="V"&&this.metadata.setFormat("bitrate",i*8/e.duration)}if(this.tokenizer.fileInfo.size&&e.codecProfile==="CBR"){const i=this.tokenizer.fileInfo.size-this.mpegOffset-(t?128:0);if(this.frame_size!==null&&this.samplesPerFrame!==null){const s=Math.round(i/this.frame_size)*this.samplesPerFrame;if(this.metadata.setFormat("numberOfSamples",s),e.sampleRate&&!e.duration){const n=s/e.sampleRate;B("Calculate CBR duration based on file size: %s",n),this.metadata.setFormat("duration",n)}}}}}async sync(){let e=!1;for(;;){let t=0;if(this.syncPeek.len=await this.tokenizer.peekBuffer(this.syncPeek.buf,{length:Wt,mayBeLess:!0}),this.syncPeek.len<=163)throw new ie;for(;;){if(e&&(this.syncPeek.buf[t]&224)===224){this.buf_frame_header[0]=P.SyncByte1,this.buf_frame_header[1]=this.syncPeek.buf[t],await this.tokenizer.ignore(t),B(`Sync at offset=${this.tokenizer.position-1}, frameCount=${this.frameCount}`),this.syncFrameCount===this.frameCount&&(B(`Re-synced MPEG stream, frameCount=${this.frameCount}`),this.frameCount=0,this.frame_size=0),this.syncFrameCount=this.frameCount;return}if(e=!1,t=this.syncPeek.buf.indexOf(P.SyncByte1,t),t===-1){if(this.syncPeek.len<this.syncPeek.buf.length)throw new ie;await this.tokenizer.ignore(this.syncPeek.len);break}++t,e=!0}}}async parseCommonMpegHeader(){this.frameCount===0&&(this.mpegOffset=this.tokenizer.position-1),await this.tokenizer.peekBuffer(this.buf_frame_header.subarray(1),{length:3});let e;try{e=qt.get(this.buf_frame_header,0)}catch(t){if(await this.tokenizer.ignore(1),t instanceof Error)return this.metadata.addWarning(`Parse error: ${t.message}`),!1;throw t}return await this.tokenizer.ignore(3),this.metadata.setFormat("container",e.container),this.metadata.setFormat("codec",e.codec),this.metadata.setFormat("lossless",!1),this.metadata.setFormat("sampleRate",e.samplingRate),this.frameCount++,e.version!==null&&e.version>=2&&e.layer===0?this.parseAdts(e):this.parseAudioFrameHeader(e)}async parseAudioFrameHeader(e){this.metadata.setFormat("numberOfChannels",e.channelMode==="mono"?1:2),this.metadata.setFormat("bitrate",e.bitrate),this.frameCount<20*1e4&&B("offset=%s MP%s bitrate=%s sample-rate=%s",this.tokenizer.position-4,e.layer,e.bitrate,e.samplingRate);const t=e.calcSlotSize();if(t===null)throw new fe("invalid slot_size");const i=e.calcSamplesPerFrame();B(`samples_per_frame=${i}`);const s=i/8;if(e.bitrate!==null&&e.samplingRate!=null){const n=s*e.bitrate/e.samplingRate+(e.padding?t:0);this.frame_size=Math.floor(n)}if(this.audioFrameHeader=e,e.bitrate!==null&&this.bitrates.push(e.bitrate),this.frameCount===1)return this.offset=qt.len,await this.skipSideInformation(),!1;if(this.frameCount===3){if(this.areAllSame(this.bitrates)){if(this.samplesPerFrame=i,this.metadata.setFormat("codecProfile","CBR"),this.tokenizer.fileInfo.size)return!0}else if(this.metadata.format.duration)return!0;if(!this.options.duration)return!0}return this.options.duration&&this.frameCount===4&&(this.samplesPerFrame=i,this.calculateEofDuration=!0),this.offset=4,e.isProtectedByCRC?(await this.parseCrc(),!1):(await this.skipSideInformation(),!1)}async parseAdts(e){const t=new Uint8Array(3);if(await this.tokenizer.readBuffer(t),e.frameLength+=S(t,0,0,11),this.totalDataLength+=e.frameLength,this.samplesPerFrame=1024,e.samplingRate!==null){const i=e.samplingRate/this.samplesPerFrame,n=8*(this.frameCount===0?0:this.totalDataLength/this.frameCount)*i+.5;this.metadata.setFormat("bitrate",n),B(`frame-count=${this.frameCount}, size=${e.frameLength} bytes, bit-rate=${n}`)}if(await this.tokenizer.ignore(e.frameLength>7?e.frameLength-7:1),this.frameCount===3)if(this.metadata.setFormat("codecProfile",e.codecProfile),e.mp4ChannelConfig&&this.metadata.setFormat("numberOfChannels",e.mp4ChannelConfig.length),this.options.duration)this.calculateEofDuration=!0;else return!0;return!1}async parseCrc(){return this.crc=await this.tokenizer.readNumber(ae),this.offset+=2,this.skipSideInformation()}async skipSideInformation(){if(this.audioFrameHeader){const e=this.audioFrameHeader.calculateSideInfoLength();if(e!==null){await this.tokenizer.readToken(new F(e)),this.offset+=e,await this.readXtraInfoHeader();return}}}async readXtraInfoHeader(){const e=await this.tokenizer.readToken(Ht);switch(this.offset+=Ht.len,e){case"Info":return this.metadata.setFormat("codecProfile","CBR"),this.readXingInfoHeader();case"Xing":{const i=await this.readXingInfoHeader();if(i.vbrScale!==null){const s=Qi(i.vbrScale);this.metadata.setFormat("codecProfile",s)}return null}case"Xtra":break;case"LAME":{const i=await this.tokenizer.readToken(it);if(this.frame_size!==null&&this.frame_size>=this.offset+it.len)return this.offset+=it.len,this.metadata.setFormat("tool",`LAME ${i}`),await this.skipFrameData(this.frame_size-this.offset),null;this.metadata.addWarning("Corrupt LAME header");break}}const t=this.frame_size-this.offset;return t<0?this.metadata.addWarning(`Frame ${this.frameCount}corrupt: negative frameDataLeft`):await this.skipFrameData(t),null}async readXingInfoHeader(){const e=this.tokenizer.position,t=await Zi(this.tokenizer);if(this.offset+=this.tokenizer.position-e,t.lame&&(this.metadata.setFormat("tool",`LAME ${te(t.lame.version)}`),t.lame.extended&&(this.metadata.setFormat("trackPeakLevel",t.lame.extended.track_peak),t.lame.extended.track_gain&&this.metadata.setFormat("trackGain",t.lame.extended.track_gain.adjustment),t.lame.extended.album_gain&&this.metadata.setFormat("albumGain",t.lame.extended.album_gain.adjustment),this.metadata.setFormat("duration",t.lame.extended.music_length/1e3))),t.streamSize&&this.audioFrameHeader&&t.numFrames!==null){const s=this.audioFrameHeader.calcDuration(t.numFrames);return this.metadata.setFormat("duration",s),B("Get duration from Xing header: %s",this.metadata.format.duration),t}const i=this.frame_size-this.offset;return await this.skipFrameData(i),t}async skipFrameData(e){if(e<0)throw new fe("frame-data-left cannot be negative");await this.tokenizer.ignore(e),this.countSkipFrameData+=e}areAllSame(e){const t=e[0];return e.every(i=>i===t)}}const ts=Object.freeze(Object.defineProperty({__proto__:null,MpegContentError:fe,MpegParser:es},Symbol.toStringTag,{value:"Module"}));class l{static fromBin(e,t=0){return new l(l.decode(e,t))}static decode(e,t=0){const i=new DataView(e.buffer,t);return`${i.getUint32(0,!0).toString(16)}-${i.getUint16(4,!0).toString(16)}-${i.getUint16(6,!0).toString(16)}-${i.getUint16(8).toString(16)}-${yt(e.slice(t+10,t+16))}`.toUpperCase()}static decodeMediaType(e){switch(e.str){case l.AudioMedia.str:return"audio";case l.VideoMedia.str:return"video";case l.CommandMedia.str:return"command";case l.Degradable_JPEG_Media.str:return"degradable-jpeg";case l.FileTransferMedia.str:return"file-transfer";case l.BinaryMedia.str:return"binary"}}static encode(e){const t=new Uint8Array(16),i=new DataView(t.buffer);return i.setUint32(0,Number.parseInt(e.slice(0,8),16),!0),i.setUint16(4,Number.parseInt(e.slice(9,13),16),!0),i.setUint16(6,Number.parseInt(e.slice(14,18),16),!0),t.set(_t(e.slice(19,23)),8),t.set(_t(e.slice(24)),10),t}constructor(e){this.str=e}equals(e){return this.str===e.str}toBin(){return l.encode(this.str)}}l.HeaderObject=new l("75B22630-668E-11CF-A6D9-00AA0062CE6C");l.DataObject=new l("75B22636-668E-11CF-A6D9-00AA0062CE6C");l.SimpleIndexObject=new l("33000890-E5B1-11CF-89F4-00A0C90349CB");l.IndexObject=new l("D6E229D3-35DA-11D1-9034-00A0C90349BE");l.MediaObjectIndexObject=new l("FEB103F8-12AD-4C64-840F-2A1D2F7AD48C");l.TimecodeIndexObject=new l("3CB73FD0-0C4A-4803-953D-EDF7B6228F0C");l.FilePropertiesObject=new l("8CABDCA1-A947-11CF-8EE4-00C00C205365");l.StreamPropertiesObject=new l("B7DC0791-A9B7-11CF-8EE6-00C00C205365");l.HeaderExtensionObject=new l("5FBF03B5-A92E-11CF-8EE3-00C00C205365");l.CodecListObject=new l("86D15240-311D-11D0-A3A4-00A0C90348F6");l.ScriptCommandObject=new l("1EFB1A30-0B62-11D0-A39B-00A0C90348F6");l.MarkerObject=new l("F487CD01-A951-11CF-8EE6-00C00C205365");l.BitrateMutualExclusionObject=new l("D6E229DC-35DA-11D1-9034-00A0C90349BE");l.ErrorCorrectionObject=new l("75B22635-668E-11CF-A6D9-00AA0062CE6C");l.ContentDescriptionObject=new l("75B22633-668E-11CF-A6D9-00AA0062CE6C");l.ExtendedContentDescriptionObject=new l("D2D0A440-E307-11D2-97F0-00A0C95EA850");l.ContentBrandingObject=new l("2211B3FA-BD23-11D2-B4B7-00A0C955FC6E");l.StreamBitratePropertiesObject=new l("7BF875CE-468D-11D1-8D82-006097C9A2B2");l.ContentEncryptionObject=new l("2211B3FB-BD23-11D2-B4B7-00A0C955FC6E");l.ExtendedContentEncryptionObject=new l("298AE614-2622-4C17-B935-DAE07EE9289C");l.DigitalSignatureObject=new l("2211B3FC-BD23-11D2-B4B7-00A0C955FC6E");l.PaddingObject=new l("1806D474-CADF-4509-A4BA-9AABCB96AAE8");l.ExtendedStreamPropertiesObject=new l("14E6A5CB-C672-4332-8399-A96952065B5A");l.AdvancedMutualExclusionObject=new l("A08649CF-4775-4670-8A16-6E35357566CD");l.GroupMutualExclusionObject=new l("D1465A40-5A79-4338-B71B-E36B8FD6C249");l.StreamPrioritizationObject=new l("D4FED15B-88D3-454F-81F0-ED5C45999E24");l.BandwidthSharingObject=new l("A69609E6-517B-11D2-B6AF-00C04FD908E9");l.LanguageListObject=new l("7C4346A9-EFE0-4BFC-B229-393EDE415C85");l.MetadataObject=new l("C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA");l.MetadataLibraryObject=new l("44231C94-9498-49D1-A141-1D134E457054");l.IndexParametersObject=new l("D6E229DF-35DA-11D1-9034-00A0C90349BE");l.MediaObjectIndexParametersObject=new l("6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7");l.TimecodeIndexParametersObject=new l("F55E496D-9797-4B5D-8C8B-604DFE9BFB24");l.CompatibilityObject=new l("26F18B5D-4584-47EC-9F5F-0E651F0452C9");l.AdvancedContentEncryptionObject=new l("43058533-6981-49E6-9B74-AD12CB86D58C");l.AudioMedia=new l("F8699E40-5B4D-11CF-A8FD-00805F5C442B");l.VideoMedia=new l("BC19EFC0-5B4D-11CF-A8FD-00805F5C442B");l.CommandMedia=new l("59DACFC0-59E6-11D0-A3AC-00A0C90348F6");l.JFIF_Media=new l("B61BE100-5B4E-11CF-A8FD-00805F5C442B");l.Degradable_JPEG_Media=new l("35907DE0-E415-11CF-A917-00805F5C442B");l.FileTransferMedia=new l("91BD222C-F21C-497A-8B6D-5AA86BFC0185");l.BinaryMedia=new l("3AFB65E2-47EF-40F2-AC2C-70A90D71D343");l.ASF_Index_Placeholder_Object=new l("D9AADE20-7C17-4F9C-BC28-8555DD98E2A2");function as(a){return is[a]}function Ze(a){return te(x(a,"utf-16le"))}const is=[Ze,Yt,ss,ns,rs,ba,Yt];function Yt(a){return new Uint8Array(a)}function ss(a,e=0){return ba(a,e)===1}function ns(a,e=0){return g.get(a,e)}function rs(a,e=0){return L.get(a,e)}function ba(a,e=0){return y.get(a,e)}class ya extends E("ASF"){}const os={len:30,get:(a,e)=>({objectId:l.fromBin(a,e),objectSize:Number(L.get(a,e+16)),numberOfHeaderObjects:g.get(a,e+24)})},le={len:24,get:(a,e)=>({objectId:l.fromBin(a,e),objectSize:Number(L.get(a,e+16))})};class he{constructor(e){this.len=Number(e.objectSize)-le.len}postProcessTag(e,t,i,s){if(t==="WM/Picture")e.push({id:t,value:Et.fromBuffer(s)});else{const n=as(i);if(!n)throw new ya(`unexpected value headerType: ${i}`);e.push({id:t,value:n(s)})}}}class Kt extends he{get(e,t){return null}}class pt extends he{get(e,t){return{fileId:l.fromBin(e,t),fileSize:L.get(e,t+16),creationDate:L.get(e,t+24),dataPacketsCount:L.get(e,t+32),playDuration:L.get(e,t+40),sendDuration:L.get(e,t+48),preroll:L.get(e,t+56),flags:{broadcast:A(e,t+64,24),seekable:A(e,t+64,25)},minimumDataPacketSize:g.get(e,t+68),maximumDataPacketSize:g.get(e,t+72),maximumBitrate:g.get(e,t+76)}}}pt.guid=l.FilePropertiesObject;class gt extends he{get(e,t){return{streamType:l.decodeMediaType(l.fromBin(e,t)),errorCorrectionType:l.fromBin(e,t+8)}}}gt.guid=l.StreamPropertiesObject;class kt{constructor(){this.len=22}get(e,t){const i=new DataView(e.buffer,t);return{reserved1:l.fromBin(e,t),reserved2:i.getUint16(16,!0),extensionDataSize:i.getUint16(18,!0)}}}kt.guid=l.HeaderExtensionObject;const cs={len:20,get:(a,e)=>({entryCount:new DataView(a.buffer,e).getUint16(16,!0)})};async function Zt(a){const e=await a.readNumber(y);return(await a.readToken(new T(e*2,"utf-16le"))).replace("\0","")}async function ls(a){const e=await a.readToken(cs),t=[];for(let i=0;i<e.entryCount;++i)t.push(await ms(a));return t}async function ds(a){const e=await a.readNumber(y),t=new Uint8Array(e);return await a.readBuffer(t),t}async function ms(a){const e=await a.readNumber(y);return{type:{videoCodec:(e&1)===1,audioCodec:(e&2)===2},codecName:await Zt(a),description:await Zt(a),information:await ds(a)}}class me extends he{get(e,t){const i=[],s=new DataView(e.buffer,t);let n=10;for(let r=0;r<me.contentDescTags.length;++r){const o=s.getUint16(r*2,!0);if(o>0){const c=me.contentDescTags[r],u=n+o;i.push({id:c,value:Ze(e.slice(t+n,t+u))}),n=u}}return i}}me.guid=l.ContentDescriptionObject;me.contentDescTags=["Title","Author","Copyright","Description","Rating"];class Tt extends he{get(e,t){const i=[],s=new DataView(e.buffer,t),n=s.getUint16(0,!0);let r=2;for(let o=0;o<n;o+=1){const c=s.getUint16(r,!0);r+=2;const u=Ze(e.slice(t+r,t+r+c));r+=c;const p=s.getUint16(r,!0);r+=2;const h=s.getUint16(r,!0);r+=2;const I=e.slice(t+r,t+r+h);r+=h,this.postProcessTag(i,u,p,I)}return i}}Tt.guid=l.ExtendedContentDescriptionObject;class wt extends he{get(e,t){const i=new DataView(e.buffer,t);return{startTime:L.get(e,t),endTime:L.get(e,t+8),dataBitrate:i.getInt32(12,!0),bufferSize:i.getInt32(16,!0),initialBufferFullness:i.getInt32(20,!0),alternateDataBitrate:i.getInt32(24,!0),alternateBufferSize:i.getInt32(28,!0),alternateInitialBufferFullness:i.getInt32(32,!0),maximumObjectSize:i.getInt32(36,!0),flags:{reliableFlag:A(e,t+40,0),seekableFlag:A(e,t+40,1),resendLiveCleanpointsFlag:A(e,t+40,2)},streamNumber:i.getInt16(42,!0),streamLanguageId:i.getInt16(44,!0),averageTimePerFrame:i.getInt32(52,!0),streamNameCount:i.getInt32(54,!0),payloadExtensionSystems:i.getInt32(56,!0),streamNames:[],streamPropertiesObject:null}}}wt.guid=l.ExtendedStreamPropertiesObject;class Xe extends he{get(e,t){const i=[],s=new DataView(e.buffer,t),n=s.getUint16(0,!0);let r=2;for(let o=0;o<n;o+=1){r+=4;const c=s.getUint16(r,!0);r+=2;const u=s.getUint16(r,!0);r+=2;const p=s.getUint32(r,!0);r+=4;const h=Ze(e.slice(t+r,t+r+c));r+=c;const I=e.slice(t+r,t+r+p);r+=p,this.postProcessTag(i,h,u,I)}return i}}Xe.guid=l.MetadataObject;class It extends Xe{}It.guid=l.MetadataLibraryObject;class Et{static fromBuffer(e){return new Et(e.length).get(e,0)}constructor(e){this.len=e}get(e,t){const i=new DataView(e.buffer,t),s=i.getUint8(0),n=i.getInt32(1,!0);let r=5;for(;i.getUint16(r)!==0;)r+=2;const o=new T(r-5,"utf-16le").get(e,5);for(;i.getUint16(r)!==0;)r+=2;const c=new T(r-5,"utf-16le").get(e,5);return{type:Ct[s],format:o,description:c,size:n,data:e.slice(r+4)}}}const ze=b("music-metadata:parser:ASF"),us="asf";class hs extends X{async parse(){const e=await this.tokenizer.readToken(os);if(!e.objectId.equals(l.HeaderObject))throw new ya(`expected asf header; but was not found; got: ${e.objectId.str}`);try{await this.parseObjectHeader(e.numberOfHeaderObjects)}catch(t){ze("Error while parsing ASF: %s",t)}}async parseObjectHeader(e){let t;do{const i=await this.tokenizer.readToken(le);switch(ze("header GUID=%s",i.objectId.str),i.objectId.str){case pt.guid.str:{const s=await this.tokenizer.readToken(new pt(i));this.metadata.setFormat("duration",Number(s.playDuration/BigInt(1e3))/1e4-Number(s.preroll)/1e3),this.metadata.setFormat("bitrate",s.maximumBitrate);break}case gt.guid.str:{const s=await this.tokenizer.readToken(new gt(i));this.metadata.setFormat("container",`ASF/${s.streamType}`);break}case kt.guid.str:{const s=await this.tokenizer.readToken(new kt);await this.parseExtensionObject(s.extensionDataSize);break}case me.guid.str:t=await this.tokenizer.readToken(new me(i)),await this.addTags(t);break;case Tt.guid.str:t=await this.tokenizer.readToken(new Tt(i)),await this.addTags(t);break;case l.CodecListObject.str:{const s=await ls(this.tokenizer);s.forEach(r=>{this.metadata.addStreamInfo({type:r.type.videoCodec?H.video:H.audio,codecName:r.codecName})});const n=s.filter(r=>r.type.audioCodec).map(r=>r.codecName).join("/");this.metadata.setFormat("codec",n);break}case l.StreamBitratePropertiesObject.str:await this.tokenizer.ignore(i.objectSize-le.len);break;case l.PaddingObject.str:ze("Padding: %s bytes",i.objectSize-le.len),await this.tokenizer.ignore(i.objectSize-le.len);break;default:this.metadata.addWarning(`Ignore ASF-Object-GUID: ${i.objectId.str}`),ze("Ignore ASF-Object-GUID: %s",i.objectId.str),await this.tokenizer.readToken(new Kt(i))}}while(--e)}async addTags(e){await Promise.all(e.map(({id:t,value:i})=>this.metadata.addTag(us,t,i)))}async parseExtensionObject(e){do{const t=await this.tokenizer.readToken(le),i=t.objectSize-le.len;switch(t.objectId.str){case wt.guid.str:await this.tokenizer.readToken(new wt(t));break;case Xe.guid.str:{const s=await this.tokenizer.readToken(new Xe(t));await this.addTags(s);break}case It.guid.str:{const s=await this.tokenizer.readToken(new It(t));await this.addTags(s);break}case l.PaddingObject.str:await this.tokenizer.ignore(i);break;case l.CompatibilityObject.str:await this.tokenizer.ignore(i);break;case l.ASF_Index_Placeholder_Object.str:await this.tokenizer.ignore(i);break;default:this.metadata.addWarning(`Ignore ASF-Object-GUID: ${t.objectId.str}`),await this.tokenizer.readToken(new Kt(t));break}e-=t.objectSize}while(e>0)}}const ps=Object.freeze(Object.defineProperty({__proto__:null,AsfParser:hs},Symbol.toStringTag,{value:"Module"})),ge={len:12,get:(a,e)=>({chunkID:f.get(a,e),chunkSize:Ma.get(a,e+4)})},D=b("music-metadata:parser:aiff");class Be extends E("DSDIFF"){}class gs extends X{async parse(){const e=await this.tokenizer.readToken(ge);if(e.chunkID!=="FRM8")throw new Be("Unexpected chunk-ID");const t=(await this.tokenizer.readToken(f)).trim();switch(t){case"DSD":return this.metadata.setFormat("container",`DSDIFF/${t}`),this.metadata.setFormat("lossless",!0),this.readFmt8Chunks(e.chunkSize-BigInt(f.len));default:throw new Be(`Unsupported DSDIFF type: ${t}`)}}async readFmt8Chunks(e){for(;e>=ge.len;){const t=await this.tokenizer.readToken(ge);D(`Chunk id=${t.chunkID}`),await this.readData(t),e-=BigInt(ge.len)+t.chunkSize}}async readData(e){D(`Reading data of chunk[ID=${e.chunkID}, size=${e.chunkSize}]`);const t=this.tokenizer.position;switch(e.chunkID.trim()){case"FVER":{const s=await this.tokenizer.readToken(g);D(`DSDIFF version=${s}`);break}case"PROP":{if(await this.tokenizer.readToken(f)!=="SND ")throw new Be("Unexpected PROP-chunk ID");await this.handleSoundPropertyChunks(e.chunkSize-BigInt(f.len));break}case"ID3":{const s=await this.tokenizer.readToken(new F(Number(e.chunkSize))),n=ye(s);await new W().parse(this.metadata,n,this.options);break}case"DSD":this.metadata.format.numberOfChannels&&this.metadata.setFormat("numberOfSamples",Number(e.chunkSize*BigInt(8)/BigInt(this.metadata.format.numberOfChannels))),this.metadata.format.numberOfSamples&&this.metadata.format.sampleRate&&this.metadata.setFormat("duration",this.metadata.format.numberOfSamples/this.metadata.format.sampleRate);break;default:D(`Ignore chunk[ID=${e.chunkID}, size=${e.chunkSize}]`);break}const i=e.chunkSize-BigInt(this.tokenizer.position-t);i>0&&(D(`After Parsing chunk, remaining ${i} bytes`),await this.tokenizer.ignore(Number(i)))}async handleSoundPropertyChunks(e){for(D(`Parsing sound-property-chunks, remainingSize=${e}`);e>0;){const t=await this.tokenizer.readToken(ge);D(`Sound-property-chunk[ID=${t.chunkID}, size=${t.chunkSize}]`);const i=this.tokenizer.position;switch(t.chunkID.trim()){case"FS":{const n=await this.tokenizer.readToken(k);this.metadata.setFormat("sampleRate",n);break}case"CHNL":{const n=await this.tokenizer.readToken(C);this.metadata.setFormat("numberOfChannels",n),await this.handleChannelChunks(t.chunkSize-BigInt(C.len));break}case"CMPR":{const n=(await this.tokenizer.readToken(f)).trim(),r=await this.tokenizer.readToken(w),o=await this.tokenizer.readToken(new T(r,"ascii"));n==="DSD"&&(this.metadata.setFormat("lossless",!0),this.metadata.setFormat("bitsPerSample",1)),this.metadata.setFormat("codec",`${n} (${o})`);break}case"ABSS":{const n=await this.tokenizer.readToken(C),r=await this.tokenizer.readToken(w),o=await this.tokenizer.readToken(w),c=await this.tokenizer.readToken(k);D(`ABSS ${n}:${r}:${o}.${c}`);break}case"LSCO":{const n=await this.tokenizer.readToken(C);D(`LSCO lsConfig=${n}`);break}default:D(`Unknown sound-property-chunk[ID=${t.chunkID}, size=${t.chunkSize}]`),await this.tokenizer.ignore(Number(t.chunkSize))}const s=t.chunkSize-BigInt(this.tokenizer.position-i);s>0&&(D(`After Parsing sound-property-chunk ${t.chunkSize}, remaining ${s} bytes`),await this.tokenizer.ignore(Number(s))),e-=BigInt(ge.len)+t.chunkSize,D(`Parsing sound-property-chunks, remainingSize=${e}`)}if(this.metadata.format.lossless&&this.metadata.format.sampleRate&&this.metadata.format.numberOfChannels&&this.metadata.format.bitsPerSample){const t=this.metadata.format.sampleRate*this.metadata.format.numberOfChannels*this.metadata.format.bitsPerSample;this.metadata.setFormat("bitrate",t)}}async handleChannelChunks(e){D(`Parsing channel-chunks, remainingSize=${e}`);const t=[];for(;e>=f.len;){const i=await this.tokenizer.readToken(f);D(`Channel[ID=${i}]`),t.push(i),e-=BigInt(f.len)}return D(`Channels: ${t.join(", ")}`),t}}const ks=Object.freeze(Object.defineProperty({__proto__:null,DsdiffContentParseError:Be,DsdiffParser:gs},Symbol.toStringTag,{value:"Module"})),Ts={NONE:"not compressed	PCM	Apple Computer",sowt:"PCM (byte swapped)",fl32:"32-bit floating point IEEE 32-bit float",fl64:"64-bit floating point IEEE 64-bit float	Apple Computer",alaw:"ALaw 2:1	8-bit ITU-T G.711 A-law",ulaw:"µLaw 2:1	8-bit ITU-T G.711 µ-law	Apple Computer",ULAW:"CCITT G.711 u-law 8-bit ITU-T G.711 µ-law",ALAW:"CCITT G.711 A-law 8-bit ITU-T G.711 A-law",FL32:"Float 32	IEEE 32-bit float "};class be extends E("AIFF"){}class ws{constructor(e,t){this.isAifc=t;const i=t?22:18;if(e.chunkSize<i)throw new be(`COMMON CHUNK size should always be at least ${i}`);this.len=e.chunkSize}get(e,t){const i=C.get(e,t+8)-16398,s=C.get(e,t+8+2),n={numChannels:C.get(e,t),numSampleFrames:k.get(e,t+2),sampleSize:C.get(e,t+6),sampleRate:i<0?s>>Math.abs(i):s<<i};if(this.isAifc){if(n.compressionType=f.get(e,t+18),this.len>22){const r=w.get(e,t+22);if(r>0){const o=(r+1)%2;if(23+r+o===this.len)n.compressionName=new T(r,"latin1").get(e,t+23);else throw new be("Illegal pstring length")}else n.compressionName=void 0}}else n.compressionName="PCM";return n}}const st={len:8,get:(a,e)=>({chunkID:f.get(a,e),chunkSize:Number(BigInt(k.get(a,e+4)))})},nt=b("music-metadata:parser:aiff");class Is extends X{constructor(){super(...arguments),this.isCompressed=null}async parse(){if((await this.tokenizer.readToken(st)).chunkID!=="FORM")throw new be("Invalid Chunk-ID, expected 'FORM'");const t=await this.tokenizer.readToken(f);switch(t){case"AIFF":this.metadata.setFormat("container",t),this.isCompressed=!1;break;case"AIFC":this.metadata.setFormat("container","AIFF-C"),this.isCompressed=!0;break;default:throw new be(`Unsupported AIFF type: ${t}`)}this.metadata.setFormat("lossless",!this.isCompressed);try{for(;!this.tokenizer.fileInfo.size||this.tokenizer.fileInfo.size-this.tokenizer.position>=st.len;){nt(`Reading AIFF chunk at offset=${this.tokenizer.position}`);const i=await this.tokenizer.readToken(st),s=2*Math.round(i.chunkSize/2),n=await this.readData(i);await this.tokenizer.ignore(s-n)}}catch(i){if(i instanceof ie)nt("End-of-stream");else throw i}}async readData(e){switch(e.chunkID){case"COMM":{if(this.isCompressed===null)throw new be("Failed to parse AIFF.COMM chunk when compression type is unknown");const t=await this.tokenizer.readToken(new ws(e,this.isCompressed));return this.metadata.setFormat("bitsPerSample",t.sampleSize),this.metadata.setFormat("sampleRate",t.sampleRate),this.metadata.setFormat("numberOfChannels",t.numChannels),this.metadata.setFormat("numberOfSamples",t.numSampleFrames),this.metadata.setFormat("duration",t.numSampleFrames/t.sampleRate),(t.compressionName||t.compressionType)&&this.metadata.setFormat("codec",t.compressionName??Ts[t.compressionType]),e.chunkSize}case"ID3 ":{const t=await this.tokenizer.readToken(new F(e.chunkSize)),i=ye(t);return await new W().parse(this.metadata,i,this.options),e.chunkSize}case"SSND":return this.metadata.format.duration&&this.metadata.setFormat("bitrate",8*e.chunkSize/this.metadata.format.duration),0;case"NAME":case"AUTH":case"(c) ":case"ANNO":return this.readTextChunk(e);default:return nt(`Ignore chunk id=${e.chunkID}, size=${e.chunkSize}`),0}}async readTextChunk(e){const i=(await this.tokenizer.readToken(new T(e.chunkSize,"ascii"))).split("\0").map(s=>s.trim()).filter(s=>s==null?void 0:s.length);return await Promise.all(i.map(s=>this.metadata.addTag("AIFF",e.chunkID,s))),e.chunkSize}}const Ss=Object.freeze(Object.defineProperty({__proto__:null,AIFFParser:Is},Symbol.toStringTag,{value:"Module"})),Fe={len:12,get:(a,e)=>({id:f.get(a,e),size:L.get(a,e+4)})},bs={len:16,get:(a,e)=>({fileSize:mt.get(a,e),metadataPointer:mt.get(a,e+8)})},ys={len:40,get:(a,e)=>({formatVersion:v.get(a,e),formatID:v.get(a,e+4),channelType:v.get(a,e+8),channelNum:v.get(a,e+12),samplingFrequency:v.get(a,e+16),bitsPerSample:v.get(a,e+20),sampleCount:mt.get(a,e+24),blockSizePerChannel:v.get(a,e+32)})},rt=b("music-metadata:parser:DSF");class fa extends E("DSD"){}class fs extends Ke{async postId3v2Parse(){const e=this.tokenizer.position,t=await this.tokenizer.readToken(Fe);if(t.id!=="DSD ")throw new fa("Invalid chunk signature");this.metadata.setFormat("container","DSF"),this.metadata.setFormat("lossless",!0);const i=await this.tokenizer.readToken(bs);if(i.metadataPointer===BigInt(0))rt("No ID3v2 tag present");else return rt(`expect ID3v2 at offset=${i.metadataPointer}`),await this.parseChunks(i.fileSize-t.size),await this.tokenizer.ignore(Number(i.metadataPointer)-this.tokenizer.position-e),new W().parse(this.metadata,this.tokenizer,this.options)}async parseChunks(e){for(;e>=Fe.len;){const t=await this.tokenizer.readToken(Fe);switch(rt(`Parsing chunk name=${t.id} size=${t.size}`),t.id){case"fmt ":{const i=await this.tokenizer.readToken(ys);this.metadata.setFormat("numberOfChannels",i.channelNum),this.metadata.setFormat("sampleRate",i.samplingFrequency),this.metadata.setFormat("bitsPerSample",i.bitsPerSample),this.metadata.setFormat("numberOfSamples",i.sampleCount),this.metadata.setFormat("duration",Number(i.sampleCount)/i.samplingFrequency);const s=i.bitsPerSample*i.samplingFrequency*i.channelNum;this.metadata.setFormat("bitrate",s);return}default:this.tokenizer.ignore(Number(t.size)-Fe.len);break}e-=t.size}}}const Cs=Object.freeze(Object.defineProperty({__proto__:null,DsdContentParseError:fa,DsfParser:fs},Symbol.toStringTag,{value:"Module"}));class Ce{static fromBase64(e){return Ce.fromBuffer(Uint8Array.from(atob(e),t=>t.charCodeAt(0)))}static fromBuffer(e){return new Ce(e.length).get(e,0)}constructor(e){this.len=e}get(e,t){const i=Ct[k.get(e,t)];t+=4;const s=k.get(e,t);t+=4;const n=new T(s,"utf-8").get(e,t);t+=s;const r=k.get(e,t);t+=4;const o=new T(r,"utf-8").get(e,t);t+=r;const c=k.get(e,t);t+=4;const u=k.get(e,t);t+=4;const p=k.get(e,t);t+=4;const h=k.get(e,t);t+=4;const I=k.get(e,t);t+=4;const z=Uint8Array.from(e.slice(t,t+I));return{type:i,format:n,description:o,width:c,height:u,colour_depth:p,indexed_color:h,data:z}}}const _e={len:7,get:(a,e)=>({packetType:w.get(a,e),vorbis:new T(6,"ascii").get(a,e+1)})},As={len:23,get:(a,e)=>({version:g.get(a,e+0),channelMode:w.get(a,e+4),sampleRate:g.get(a,e+5),bitrateMax:g.get(a,e+9),bitrateNominal:g.get(a,e+13),bitrateMin:g.get(a,e+17)})};class Ca{constructor(e,t){this.data=e,this.offset=t}readInt32(){const e=g.get(this.data,this.offset);return this.offset+=4,e}readStringUtf8(){const e=this.readInt32(),t=new TextDecoder("utf-8").decode(this.data.subarray(this.offset,this.offset+e));return this.offset+=e,t}parseUserComment(){const e=this.offset,t=this.readStringUtf8(),i=t.indexOf("=");return{key:t.slice(0,i).toUpperCase(),value:t.slice(i+1),len:this.offset-e}}}const ke=b("music-metadata:parser:ogg:vorbis1");class ot extends E("Vorbis"){}class ue{constructor(e,t){this.pageSegments=[],this.metadata=e,this.options=t}async parsePage(e,t){if(e.headerType.firstPage)this.parseFirstPage(e,t);else{if(e.headerType.continued){if(this.pageSegments.length===0)throw new ot("Cannot continue on previous page");this.pageSegments.push(t)}if(e.headerType.lastPage||!e.headerType.continued){if(this.pageSegments.length>0){const i=ue.mergeUint8Arrays(this.pageSegments);await this.parseFullPage(i)}this.pageSegments=e.headerType.lastPage?[]:[t]}}e.headerType.lastPage&&this.calculateDuration(e)}static mergeUint8Arrays(e){const t=e.reduce((s,n)=>s+n.length,0),i=new Uint8Array(t);return e.forEach((s,n,r)=>{const o=r.slice(0,n).reduce((c,u)=>c+u.length,0);i.set(s,o)}),i}async flush(){await this.parseFullPage(ue.mergeUint8Arrays(this.pageSegments))}async parseUserComment(e,t){const s=new Ca(e,t).parseUserComment();return await this.addTag(s.key,s.value),s.len}async addTag(e,t){if(e==="METADATA_BLOCK_PICTURE"&&typeof t=="string"){if(this.options.skipCovers){ke("Ignore picture");return}t=Ce.fromBase64(t),ke(`Push picture: id=${e}, format=${t.format}`)}else ke(`Push tag: id=${e}, value=${t}`);await this.metadata.addTag("vorbis",e,t)}calculateDuration(e){this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0&&(this.metadata.setFormat("numberOfSamples",e.absoluteGranulePosition),this.metadata.setFormat("duration",e.absoluteGranulePosition/this.metadata.format.sampleRate))}parseFirstPage(e,t){this.metadata.setFormat("codec","Vorbis I"),ke("Parse first page");const i=_e.get(t,0);if(i.vorbis!=="vorbis")throw new ot("Metadata does not look like Vorbis");if(i.packetType===1){const s=As.get(t,_e.len);this.metadata.setFormat("sampleRate",s.sampleRate),this.metadata.setFormat("bitrate",s.bitrateNominal),this.metadata.setFormat("numberOfChannels",s.channelMode),ke("sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s",s.sampleRate,s.bitrateNominal,s.channelMode)}else throw new ot("First Ogg page should be type 1: the identification header")}async parseFullPage(e){const t=_e.get(e,0);switch(ke("Parse full page: type=%s, byteLength=%s",t.packetType,e.byteLength),t.packetType){case 3:return this.parseUserCommentList(e,_e.len)}}async parseUserCommentList(e,t){const i=g.get(e,t);t+=4,t+=i;let s=g.get(e,t);for(t+=4;s-- >0;)t+=await this.parseUserComment(e,t)}}const vs=b("music-metadata:parser:FLAC");class Jt extends E("FLAC"){}const oe={STREAMINFO:0,PADDING:1,APPLICATION:2,SEEKTABLE:3,VORBIS_COMMENT:4,CUESHEET:5,PICTURE:6};class xs extends Ke{constructor(){super(...arguments),this.vorbisParser=new ue(this.metadata,this.options),this.padding=0}async postId3v2Parse(){if((await this.tokenizer.readToken(f)).toString()!=="fLaC")throw new Jt("Invalid FLAC preamble");let t;do t=await this.tokenizer.readToken(Ps),await this.parseDataBlock(t);while(!t.lastBlock);if(this.tokenizer.fileInfo.size&&this.metadata.format.duration){const i=this.tokenizer.fileInfo.size-this.tokenizer.position;this.metadata.setFormat("bitrate",8*i/this.metadata.format.duration)}}async parseDataBlock(e){switch(vs(`blockHeader type=${e.type}, length=${e.length}`),e.type){case oe.STREAMINFO:return this.parseBlockStreamInfo(e.length);case oe.PADDING:this.padding+=e.length;break;case oe.APPLICATION:break;case oe.SEEKTABLE:break;case oe.VORBIS_COMMENT:return this.parseComment(e.length);case oe.CUESHEET:break;case oe.PICTURE:await this.parsePicture(e.length);return;default:this.metadata.addWarning(`Unknown block type: ${e.type}`)}return this.tokenizer.ignore(e.length).then()}async parseBlockStreamInfo(e){if(e!==Qt.len)throw new Jt("Unexpected block-stream-info length");const t=await this.tokenizer.readToken(Qt);this.metadata.setFormat("container","FLAC"),this.metadata.setFormat("codec","FLAC"),this.metadata.setFormat("lossless",!0),this.metadata.setFormat("numberOfChannels",t.channels),this.metadata.setFormat("bitsPerSample",t.bitsPerSample),this.metadata.setFormat("sampleRate",t.sampleRate),t.totalSamples>0&&this.metadata.setFormat("duration",t.totalSamples/t.sampleRate)}async parseComment(e){const t=await this.tokenizer.readToken(new F(e)),i=new Ca(t,0);i.readStringUtf8();const s=i.readInt32(),n=new Array(s);for(let r=0;r<s;r++)n[r]=i.parseUserComment();await Promise.all(n.map(r=>this.vorbisParser.addTag(r.key,r.value)))}async parsePicture(e){if(this.options.skipCovers)return this.tokenizer.ignore(e);const t=await this.tokenizer.readToken(new Ce(e));this.vorbisParser.addTag("METADATA_BLOCK_PICTURE",t)}}const Ps={len:4,get:(a,e)=>({lastBlock:A(a,e,7),type:S(a,e,1,7),length:U.get(a,e+1)})},Qt={len:34,get:(a,e)=>({minimumBlockSize:C.get(a,e),maximumBlockSize:C.get(a,e+2)/1e3,minimumFrameSize:U.get(a,e+4),maximumFrameSize:U.get(a,e+7),sampleRate:U.get(a,e+10)>>4,channels:S(a,e+12,4,3)+1,bitsPerSample:S(a,e+12,7,5)+1,totalSamples:S(a,e+13,4,36),fileMD5:new F(16).get(a,e+18)})},Es=Object.freeze(Object.defineProperty({__proto__:null,FlacParser:xs},Symbol.toStringTag,{value:"Module"})),d={string:0,uint:1,uid:2,bool:3,binary:4,float:5},Ds={name:"dtd",container:{440786851:{name:"ebml",container:{17030:{name:"ebmlVersion",value:d.uint},17143:{name:"ebmlReadVersion",value:d.uint},17138:{name:"ebmlMaxIDWidth",value:d.uint},17139:{name:"ebmlMaxSizeWidth",value:d.uint},17026:{name:"docType",value:d.string},17031:{name:"docTypeVersion",value:d.uint},17029:{name:"docTypeReadVersion",value:d.uint}}},408125543:{name:"segment",container:{290298740:{name:"seekHead",container:{19899:{name:"seek",multiple:!0,container:{21419:{name:"id",value:d.binary},21420:{name:"position",value:d.uint}}}}},357149030:{name:"info",container:{29604:{name:"uid",value:d.uid},29572:{name:"filename",value:d.string},3979555:{name:"prevUID",value:d.uid},3965867:{name:"prevFilename",value:d.string},4110627:{name:"nextUID",value:d.uid},4096955:{name:"nextFilename",value:d.string},2807729:{name:"timecodeScale",value:d.uint},17545:{name:"duration",value:d.float},17505:{name:"dateUTC",value:d.uint},31657:{name:"title",value:d.string},19840:{name:"muxingApp",value:d.string},22337:{name:"writingApp",value:d.string}}},524531317:{name:"cluster",multiple:!0,container:{231:{name:"timecode",value:d.uid},22743:{name:"silentTracks ",multiple:!0},167:{name:"position",value:d.uid},171:{name:"prevSize",value:d.uid},160:{name:"blockGroup"},163:{name:"simpleBlock"}}},374648427:{name:"tracks",container:{174:{name:"entries",multiple:!0,container:{215:{name:"trackNumber",value:d.uint},29637:{name:"uid",value:d.uid},131:{name:"trackType",value:d.uint},185:{name:"flagEnabled",value:d.bool},136:{name:"flagDefault",value:d.bool},21930:{name:"flagForced",value:d.bool},156:{name:"flagLacing",value:d.bool},28135:{name:"minCache",value:d.uint},28136:{name:"maxCache",value:d.uint},2352003:{name:"defaultDuration",value:d.uint},2306383:{name:"timecodeScale",value:d.float},21358:{name:"name",value:d.string},2274716:{name:"language",value:d.string},134:{name:"codecID",value:d.string},25506:{name:"codecPrivate",value:d.binary},2459272:{name:"codecName",value:d.string},3839639:{name:"codecSettings",value:d.string},3883072:{name:"codecInfoUrl",value:d.string},2536e3:{name:"codecDownloadUrl",value:d.string},170:{name:"codecDecodeAll",value:d.bool},28587:{name:"trackOverlay",value:d.uint},224:{name:"video",container:{154:{name:"flagInterlaced",value:d.bool},21432:{name:"stereoMode",value:d.uint},176:{name:"pixelWidth",value:d.uint},186:{name:"pixelHeight",value:d.uint},21680:{name:"displayWidth",value:d.uint},21690:{name:"displayHeight",value:d.uint},21683:{name:"aspectRatioType",value:d.uint},3061028:{name:"colourSpace",value:d.uint},3126563:{name:"gammaValue",value:d.float}}},225:{name:"audio",container:{181:{name:"samplingFrequency",value:d.float},30901:{name:"outputSamplingFrequency",value:d.float},159:{name:"channels",value:d.uint},148:{name:"channels",value:d.uint},32123:{name:"channelPositions",value:d.binary},25188:{name:"bitDepth",value:d.uint}}},28032:{name:"contentEncodings",container:{25152:{name:"contentEncoding",container:{20529:{name:"order",value:d.uint},20530:{name:"scope",value:d.bool},20531:{name:"type",value:d.uint},20532:{name:"contentEncoding",container:{16980:{name:"contentCompAlgo",value:d.uint},16981:{name:"contentCompSettings",value:d.binary}}},20533:{name:"contentEncoding",container:{18401:{name:"contentEncAlgo",value:d.uint},18402:{name:"contentEncKeyID",value:d.binary},18403:{name:"contentSignature ",value:d.binary},18404:{name:"ContentSigKeyID  ",value:d.binary},18405:{name:"contentSigAlgo ",value:d.uint},18406:{name:"contentSigHashAlgo ",value:d.uint}}},25188:{name:"bitDepth",value:d.uint}}}}}}}}},475249515:{name:"cues",container:{187:{name:"cuePoint",container:{179:{name:"cueTime",value:d.uid},183:{name:"positions",container:{247:{name:"track",value:d.uint},241:{name:"clusterPosition",value:d.uint},21368:{name:"blockNumber",value:d.uint},234:{name:"codecState",value:d.uint},219:{name:"reference",container:{150:{name:"time",value:d.uint},151:{name:"cluster",value:d.uint},21343:{name:"number",value:d.uint},235:{name:"codecState",value:d.uint}}},240:{name:"relativePosition",value:d.uint}}}}}}},423732329:{name:"attachments",container:{24999:{name:"attachedFiles",multiple:!0,container:{18046:{name:"description",value:d.string},18030:{name:"name",value:d.string},18016:{name:"mimeType",value:d.string},18012:{name:"data",value:d.binary},18094:{name:"uid",value:d.uid}}}}},272869232:{name:"chapters",container:{17849:{name:"editionEntry",container:{182:{name:"chapterAtom",container:{29636:{name:"uid",value:d.uid},145:{name:"timeStart",value:d.uint},146:{name:"timeEnd",value:d.uid},152:{name:"hidden",value:d.bool},17816:{name:"enabled",value:d.uid},143:{name:"track",container:{137:{name:"trackNumber",value:d.uid},128:{name:"display",container:{133:{name:"string",value:d.string},17276:{name:"language ",value:d.string},17278:{name:"country ",value:d.string}}}}}}}}}}},307544935:{name:"tags",container:{29555:{name:"tag",multiple:!0,container:{25536:{name:"target",container:{25541:{name:"tagTrackUID",value:d.uid},25540:{name:"tagChapterUID",value:d.uint},25542:{name:"tagAttachmentUID",value:d.uid},25546:{name:"targetType",value:d.string},26826:{name:"targetTypeValue",value:d.uint},25545:{name:"tagEditionUID",value:d.uid}}},26568:{name:"simpleTags",multiple:!0,container:{17827:{name:"name",value:d.string},17543:{name:"string",value:d.string},17541:{name:"binary",value:d.binary},17530:{name:"language",value:d.string},17531:{name:"languageIETF",value:d.string},17540:{name:"default",value:d.bool}}}}}}}}}}},Te=b("music-metadata:parser:ebml");class ea extends E("EBML"){}const J={ReadNext:0,IgnoreElement:2,SkipSiblings:3,TerminateParsing:4,SkipElement:5};class zs{constructor(e){this.padding=0,this.parserMap=new Map,this.ebmlMaxIDLength=4,this.ebmlMaxSizeLength=8,this.tokenizer=e,this.parserMap.set(d.uint,t=>this.readUint(t)),this.parserMap.set(d.string,t=>this.readString(t)),this.parserMap.set(d.binary,t=>this.readBuffer(t)),this.parserMap.set(d.uid,async t=>this.readBuffer(t)),this.parserMap.set(d.bool,t=>this.readFlag(t)),this.parserMap.set(d.float,t=>this.readFloat(t))}async iterate(e,t,i){return this.parseContainer(Aa(e),t,i)}async parseContainer(e,t,i){const s={};for(;this.tokenizer.position<t;){let n;const r=this.tokenizer.position;try{n=await this.readElement()}catch(c){if(c instanceof ie)break;throw c}const o=e.container[n.id];if(o)switch(i.startNext(o)){case J.ReadNext:if(n.id,Te(`Read element: name=${de(o)}{id=0x${n.id.toString(16)}, container=${!!o.container}} at position=${r}`),o.container){const u=await this.parseContainer(o,n.len>=0?this.tokenizer.position+n.len:-1,i);o.multiple?(s[o.name]||(s[o.name]=[]),s[o.name].push(u)):s[o.name]=u,await i.elementValue(o,u,r)}else{const u=this.parserMap.get(o.value);if(typeof u=="function"){const p=await u(n);s[o.name]=p,await i.elementValue(o,p,r)}}break;case J.SkipElement:Te(`Go to next element: name=${de(o)}, element.id=0x${n.id}, container=${!!o.container} at position=${r}`);break;case J.IgnoreElement:Te(`Ignore element: name=${de(o)}, element.id=0x${n.id}, container=${!!o.container} at position=${r}`),await this.tokenizer.ignore(n.len);break;case J.SkipSiblings:Te(`Ignore remaining container, at: name=${de(o)}, element.id=0x${n.id}, container=${!!o.container} at position=${r}`),await this.tokenizer.ignore(t-this.tokenizer.position);break;case J.TerminateParsing:return Te(`Terminate parsing at element: name=${de(o)}, element.id=0x${n.id}, container=${!!o.container} at position=${r}`),s}else switch(n.id){case 236:this.padding+=n.len,await this.tokenizer.ignore(n.len);break;default:Te(`parseEbml: parent=${de(e)}, unknown child: id=${n.id.toString(16)} at position=${r}`),this.padding+=n.len,await this.tokenizer.ignore(n.len)}}return s}async readVintData(e){const t=await this.tokenizer.peekNumber(w);let i=128,s=1;for(;(t&i)===0;){if(s>e)throw new ea("VINT value exceeding maximum size");++s,i>>=1}const n=new Uint8Array(s);return await this.tokenizer.readBuffer(n),n}async readElement(){const e=await this.readVintData(this.ebmlMaxIDLength),t=await this.readVintData(this.ebmlMaxSizeLength);return t[0]^=128>>t.length-1,{id:ct(e,e.length),len:ct(t,t.length)}}async readFloat(e){switch(e.len){case 0:return 0;case 4:return this.tokenizer.readNumber(Ra);case 8:return this.tokenizer.readNumber(zt);case 10:return this.tokenizer.readNumber(zt);default:throw new ea(`Invalid IEEE-754 float length: ${e.len}`)}}async readFlag(e){return await this.readUint(e)===1}async readUint(e){const t=await this.readBuffer(e);return ct(t,e.len)}async readString(e){return(await this.tokenizer.readToken(new T(e.len,"utf-8"))).replace(/\x00.*$/g,"")}async readBuffer(e){const t=new Uint8Array(e.len);return await this.tokenizer.readBuffer(t),t}}function ct(a,e){return Number(Fs(a,e))}function Fs(a,e){const t=new Uint8Array(8),i=a.subarray(0,e);try{return t.set(i,8-e),pa.get(t,0)}catch{return BigInt(-1)}}function Aa(a){return a.container&&Object.keys(a.container).map(e=>{const t=a.container[e];return t.id=Number.parseInt(e),t}).forEach(e=>{e.parent=a,Aa(e)}),a}function de(a){let e="";return a.parent&&a.parent.name!=="dtd"&&(e+=`${de(a.parent)}/`),e+a.name}const Me=b("music-metadata:parser:matroska");class _s extends X{constructor(){super(...arguments),this.seekHeadOffset=0,this.flagUseIndexToSkipClusters=this.options.mkvUseIndex??!1}async parse(){const e=this.tokenizer.fileInfo.size??Number.MAX_SAFE_INTEGER,t=new zs(this.tokenizer);Me("Initializing DTD end MatroskaIterator"),await t.iterate(Ds,e,{startNext:i=>{switch(i.id){case 475249515:return Me(`Skip element: name=${i.name}, id=0x${i.id.toString(16)}`),J.IgnoreElement;case 524531317:if(this.flagUseIndexToSkipClusters&&this.seekHead){const s=this.seekHead.seek.find(n=>n.position+this.seekHeadOffset>this.tokenizer.position);if(s){const n=s.position+this.seekHeadOffset-this.tokenizer.position;return Me(`Use index to go to next position, ignoring ${n} bytes`),this.tokenizer.ignore(n),J.SkipElement}}return J.IgnoreElement;default:return J.ReadNext}},elementValue:async(i,s,n)=>{switch(Me(`Received: name=${i.name}, value=${s}`),i.id){case 17026:this.metadata.setFormat("container",`EBML/${s}`);break;case 290298740:this.seekHead=s,this.seekHeadOffset=n;break;case 357149030:{const r=s,o=r.timecodeScale?r.timecodeScale:1e6;if(typeof r.duration=="number"){const c=r.duration*o/1e9;await this.addTag("segment:title",r.title),this.metadata.setFormat("duration",Number(c))}}break;case 374648427:{const r=s;if(r!=null&&r.entries){r.entries.forEach(c=>{const u={codecName:c.codecID.replace("A_","").replace("V_",""),codecSettings:c.codecSettings,flagDefault:c.flagDefault,flagLacing:c.flagLacing,flagEnabled:c.flagEnabled,language:c.language,name:c.name,type:c.trackType,audio:c.audio,video:c.video};this.metadata.addStreamInfo(u)});const o=r.entries.filter(c=>c.trackType===H.audio).reduce((c,u)=>!c||u.flagDefault&&!c.flagDefault||u.trackNumber<c.trackNumber?u:c,null);o&&(this.metadata.setFormat("codec",o.codecID.replace("A_","")),this.metadata.setFormat("sampleRate",o.audio.samplingFrequency),this.metadata.setFormat("numberOfChannels",o.audio.channels))}}break;case 307544935:{const r=s;await Promise.all(r.tag.map(async o=>{const c=o.target,u=c!=null&&c.targetTypeValue?La[c.targetTypeValue]:c!=null&&c.targetType?c.targetType:"track";await Promise.all(o.simpleTags.map(async p=>{const h=p.string?p.string:p.binary;await this.addTag(`${u}:${p.name}`,h)}))}))}break;case 423732329:{const r=s;await Promise.all(r.attachedFiles.filter(o=>o.mimeType.startsWith("image/")).map(o=>this.addTag("picture",{data:o.data,format:o.mimeType,description:o.description,name:o.name})))}break}}})}async addTag(e,t){await this.metadata.addTag("matroska",e,t)}}const Ms=Object.freeze(Object.defineProperty({__proto__:null,MatroskaParser:_s},Symbol.toStringTag,{value:"Module"})),va=b("music-metadata:parser:MP4:atom");class we extends E("MP4"){}const je={len:8,get:(a,e)=>{const t=k.get(a,e);if(t<0)throw new we("Invalid atom header length");return{length:BigInt(t),name:new T(4,"latin1").get(a,e+4)}},put:(a,e,t)=>(k.put(a,e,Number(t.length)),f.put(a,e+4,t.name))},Rs=pa,ta={len:4,get:(a,e)=>({type:new T(4,"ascii").get(a,e)})};class xa{constructor(e,t,i){if(e<t)throw new we(`Atom ${i} expected to be ${t}, but specifies ${e} bytes long.`);e>t&&va(`Warning: atom ${i} expected to be ${t}, but was actually ${e} bytes long.`),this.len=e}}const Ie={len:4,get:(a,e)=>{const t=k.get(a,e)-2082844800;return new Date(t*1e3)}};class Os extends xa{constructor(e){super(e,24,"mdhd")}get(e,t){return{version:w.get(e,t+0),flags:U.get(e,t+1),creationTime:Ie.get(e,t+4),modificationTime:Ie.get(e,t+8),timeScale:k.get(e,t+12),duration:k.get(e,t+16),language:C.get(e,t+20),quality:C.get(e,t+22)}}}class Bs extends xa{constructor(e){super(e,100,"mvhd")}get(e,t){return{version:w.get(e,t),flags:U.get(e,t+1),creationTime:Ie.get(e,t+4),modificationTime:Ie.get(e,t+8),timeScale:k.get(e,t+12),duration:k.get(e,t+16),preferredRate:k.get(e,t+20),preferredVolume:C.get(e,t+24),previewTime:k.get(e,t+72),previewDuration:k.get(e,t+76),posterTime:k.get(e,t+80),selectionTime:k.get(e,t+84),selectionDuration:k.get(e,t+88),currentTime:k.get(e,t+92),nextTrackID:k.get(e,t+96)}}}class Ls{constructor(e){this.len=e}get(e,t){return{type:{set:w.get(e,t+0),type:U.get(e,t+1)},locale:U.get(e,t+4),value:new F(this.len-8).get(e,t+8)}}}class Ns{constructor(e){this.len=e}get(e,t){return{version:w.get(e,t),flags:U.get(e,t+1),name:new T(this.len-4,"utf-8").get(e,t+4)}}}class $s{constructor(e){this.len=e}get(e,t){return{version:w.get(e,t),flags:U.get(e,t+1),creationTime:Ie.get(e,t+4),modificationTime:Ie.get(e,t+8),trackId:k.get(e,t+12),duration:k.get(e,t+20),layer:C.get(e,t+24),alternateGroup:C.get(e,t+26),volume:C.get(e,t+28)}}}const aa={len:8,get:(a,e)=>({version:w.get(a,e),flags:U.get(a,e+1),numberOfEntries:k.get(a,e+4)})};class Us{constructor(e){this.len=e}get(e,t){const i=this.len-12;return{dataFormat:f.get(e,t),dataReferenceIndex:C.get(e,t+10),description:i>0?new F(i).get(e,t+12):void 0}}}class Gs{constructor(e){this.len=e}get(e,t){const i=aa.get(e,t);t+=aa.len;const s=[];for(let n=0;n<i.numberOfEntries;++n){const r=k.get(e,t);t+=k.len,s.push(new Us(r-k.len).get(e,t)),t+=r}return{header:i,table:s}}}const ia={len:8,get(a,e){return{version:ae.get(a,e),revision:ae.get(a,e+2),vendor:q.get(a,e+4)}}},Xs={len:12,get(a,e){return{numAudioChannels:ae.get(a,e+0),sampleSize:ae.get(a,e+2),compressionId:ae.get(a,e+4),packetSize:ae.get(a,e+6),sampleRate:C.get(a,e+8)+C.get(a,e+10)/1e4}}};class Dt{constructor(e,t){this.len=e,this.token=t}get(e,t){const i=q.get(e,t+4);return{version:Ne.get(e,t+0),flags:ga.get(e,t+1),numberOfEntries:i,entries:Pa(e,this.token,t+8,this.len-8,i)}}}const js={len:8,get(a,e){return{count:q.get(a,e+0),duration:q.get(a,e+4)}}};class Hs extends Dt{constructor(e){super(e,js)}}const Ws={len:12,get(a,e){return{firstChunk:q.get(a,e),samplesPerChunk:q.get(a,e+4),sampleDescriptionId:q.get(a,e+8)}}};class Vs extends Dt{constructor(e){super(e,Ws)}}class qs{constructor(e){this.len=e}get(e,t){const i=q.get(e,t+8);return{version:Ne.get(e,t),flags:ga.get(e,t+1),sampleSize:q.get(e,t+4),numberOfEntries:i,entries:Pa(e,q,t+12,this.len-12,i)}}}class Ys extends Dt{constructor(e){super(e,q),this.len=e}}class Ks{constructor(e){this.len=e}get(e,t){const i=ae.get(e,t+0);return new T(i,"utf-8").get(e,t+2)}}function Pa(a,e,t,i,s){if(va(`remainingLen=${i}, numberOfEntries=${s} * token-len=${e.len}`),i===0)return[];if(i!==s*e.len)throw new we("mismatch number-of-entries with remaining atom-length");const n=[];for(let r=0;r<s;++r)n.push(e.get(a,t)),t+=e.len;return n}const sa=b("music-metadata:parser:MP4:Atom");class He{static async readAtom(e,t,i,s){const n=e.position;sa(`Reading next token on offset=${n}...`);const r=await e.readToken(je),o=r.length===1n;o&&(r.length=await e.readToken(Rs));const c=new He(r,o,i),u=c.getPayloadLength(s);return sa(`parse atom name=${c.atomPath}, extended=${c.extended}, offset=${n}, len=${c.header.length}`),await c.readData(e,t,u),c}constructor(e,t,i){this.header=e,this.extended=t,this.parent=i,this.children=[],this.atomPath=(this.parent?`${this.parent.atomPath}.`:"")+this.header.name}getHeaderLength(){return this.extended?16:8}getPayloadLength(e){return(this.header.length===0n?e:Number(this.header.length))-this.getHeaderLength()}async readAtoms(e,t,i){for(;i>0;){const s=await He.readAtom(e,t,this,i);this.children.push(s),i-=s.header.length===0n?i:Number(s.header.length)}}async readData(e,t,i){switch(this.header.name){case"moov":case"udta":case"trak":case"mdia":case"minf":case"stbl":case"<id>":case"ilst":case"tref":return this.readAtoms(e,t,this.getPayloadLength(i));case"meta":{const n=(await e.peekToken(je)).name==="hdlr"?0:4;return await e.ignore(n),this.readAtoms(e,t,this.getPayloadLength(i)-n)}default:return t(this,i)}}}const Y=b("music-metadata:parser:MP4"),Zs="iTunes",na={raw:{lossy:!1,format:"raw"},MAC3:{lossy:!0,format:"MACE 3:1"},MAC6:{lossy:!0,format:"MACE 6:1"},ima4:{lossy:!0,format:"IMA 4:1"},ulaw:{lossy:!0,format:"uLaw 2:1"},alaw:{lossy:!0,format:"uLaw 2:1"},Qclp:{lossy:!0,format:"QUALCOMM PureVoice"},".mp3":{lossy:!0,format:"MPEG-1 layer 3"},alac:{lossy:!1,format:"ALAC"},"ac-3":{lossy:!0,format:"AC-3"},mp4a:{lossy:!0,format:"MPEG-4/AAC"},mp4s:{lossy:!0,format:"MP4S"},c608:{lossy:!0,format:"CEA-608"},c708:{lossy:!0,format:"CEA-708"}};function ra(a,e,t){return t.indexOf(a)===e}class We extends X{constructor(){super(...arguments),this.tracks=[],this.atomParsers={mvhd:async e=>{const t=await this.tokenizer.readToken(new Bs(e));this.metadata.setFormat("creationTime",t.creationTime),this.metadata.setFormat("modificationTime",t.modificationTime)},mdhd:async e=>{const t=await this.tokenizer.readToken(new Os(e)),i=this.getTrackDescription();i.creationTime=t.creationTime,i.modificationTime=t.modificationTime,i.timeScale=t.timeScale,i.duration=t.duration},chap:async e=>{const t=this.getTrackDescription(),i=[];for(;e>=k.len;)i.push(await this.tokenizer.readNumber(k)),e-=k.len;t.chapterList=i},tkhd:async e=>{const t=await this.tokenizer.readToken(new $s(e));this.tracks.push(t)},mdat:async e=>{if(this.audioLengthInBytes=e,this.calculateBitRate(),this.options.includeChapters){const t=this.tracks.filter(i=>i.chapterList);if(t.length===1){const i=t[0].chapterList,s=this.tracks.filter(n=>i.indexOf(n.trackId)!==-1);if(s.length===1)return this.parseChapterTrack(s[0],t[0],e)}}await this.tokenizer.ignore(e)},ftyp:async e=>{const t=[];for(;e>0;){const s=await this.tokenizer.readToken(ta);e-=ta.len;const n=s.type.replace(/\W/g,"");n.length>0&&t.push(n)}Y(`ftyp: ${t.join("/")}`);const i=t.filter(ra).join("/");this.metadata.setFormat("container",i)},stsd:async e=>{const t=await this.tokenizer.readToken(new Gs(e)),i=this.getTrackDescription();i.soundSampleDescription=t.table.map(s=>this.parseSoundSampleDescription(s))},stsc:async e=>{const t=await this.tokenizer.readToken(new Vs(e));this.getTrackDescription().sampleToChunkTable=t.entries},stts:async e=>{const t=await this.tokenizer.readToken(new Hs(e));this.getTrackDescription().timeToSampleTable=t.entries},stsz:async e=>{const t=await this.tokenizer.readToken(new qs(e)),i=this.getTrackDescription();i.sampleSize=t.sampleSize,i.sampleSizeTable=t.entries},stco:async e=>{const t=await this.tokenizer.readToken(new Ys(e));this.getTrackDescription().chunkOffsetTable=t.entries},date:async e=>{const t=await this.tokenizer.readToken(new T(e,"utf-8"));await this.addTag("date",t)}}}static read_BE_Integer(e,t){const i=(t?"INT":"UINT")+e.length*8+(e.length>1?"_BE":""),s=Oa[i];if(!s)throw new we(`Token for integer type not found: "${i}"`);return Number(s.get(e,0))}async parse(){this.tracks=[];let e=this.tokenizer.fileInfo.size||0;for(;!this.tokenizer.fileInfo.size||e>0;){try{if((await this.tokenizer.peekToken(je)).name==="\0\0\0\0"){const r=`Error at offset=${this.tokenizer.position}: box.id=0`;Y(r),this.addWarning(r);break}}catch(n){if(n instanceof Error){const r=`Error at offset=${this.tokenizer.position}: ${n.message}`;Y(r),this.addWarning(r)}else throw n;break}const s=await He.readAtom(this.tokenizer,(n,r)=>this.handleAtom(n,r),null,e);e-=s.header.length===BigInt(0)?e:Number(s.header.length)}const t=[];this.tracks.forEach(s=>{const n=[];s.soundSampleDescription.forEach(r=>{const o={},c=na[r.dataFormat];if(c?(n.push(c.format),o.codecName=c.format):o.codecName=`<${r.dataFormat}>`,r.description){const{description:u}=r;u.sampleRate>0&&(o.type=H.audio,o.audio={samplingFrequency:u.sampleRate,bitDepth:u.sampleSize,channels:u.numAudioChannels})}this.metadata.addStreamInfo(o)}),n.length>=1&&t.push(n.join("/"))}),t.length>0&&this.metadata.setFormat("codec",t.filter(ra).join("+"));const i=this.tracks.filter(s=>s.soundSampleDescription.length>=1&&s.soundSampleDescription[0].description&&s.soundSampleDescription[0].description.numAudioChannels>0);if(i.length>=1){const s=i[0];if(s.timeScale>0){const o=s.duration/s.timeScale;this.metadata.setFormat("duration",o)}const n=s.soundSampleDescription[0];if(n.description&&(this.metadata.setFormat("sampleRate",n.description.sampleRate),this.metadata.setFormat("bitsPerSample",n.description.sampleSize),this.metadata.setFormat("numberOfChannels",n.description.numAudioChannels),s.timeScale===0&&s.timeToSampleTable.length>0)){const c=s.timeToSampleTable.map(u=>u.count*u.duration).reduce((u,p)=>u+p)/n.description.sampleRate;this.metadata.setFormat("duration",c)}const r=na[n.dataFormat];r&&this.metadata.setFormat("lossless",!r.lossy),this.calculateBitRate()}}async handleAtom(e,t){if(e.parent)switch(e.parent.header.name){case"ilst":case"<id>":return this.parseMetadataItemData(e)}if(this.atomParsers[e.header.name])return this.atomParsers[e.header.name](t);Y(`No parser for atom path=${e.atomPath}, payload-len=${t}, ignoring atom`),await this.tokenizer.ignore(t)}getTrackDescription(){return this.tracks[this.tracks.length-1]}calculateBitRate(){this.audioLengthInBytes&&this.metadata.format.duration&&this.metadata.setFormat("bitrate",8*this.audioLengthInBytes/this.metadata.format.duration)}async addTag(e,t){await this.metadata.addTag(Zs,e,t)}addWarning(e){Y(`Warning: ${e}`),this.metadata.addWarning(e)}parseMetadataItemData(e){let t=e.header.name;return e.readAtoms(this.tokenizer,async(i,s)=>{const n=i.getPayloadLength(s);switch(i.header.name){case"data":return this.parseValueAtom(t,i);case"name":case"mean":case"rate":{const r=await this.tokenizer.readToken(new Ns(n));t+=`:${r.name}`;break}default:{const r=await this.tokenizer.readToken(new F(n));this.addWarning(`Unsupported meta-item: ${t}[${i.header.name}] => value=${yt(r)} ascii=${bt(r,"ascii")}`)}}},e.getPayloadLength(0))}async parseValueAtom(e,t){const i=await this.tokenizer.readToken(new Ls(Number(t.header.length)-je.len));if(i.type.set!==0)throw new we(`Unsupported type-set != 0: ${i.type.set}`);switch(i.type.type){case 0:switch(e){case"trkn":case"disk":{const s=w.get(i.value,3),n=w.get(i.value,5);await this.addTag(e,`${s}/${n}`);break}case"gnre":{const s=w.get(i.value,1),n=Ge[s-1];await this.addTag(e,n);break}case"rate":{const s=new TextDecoder("ascii").decode(i.value);await this.addTag(e,s);break}default:Y(`unknown proprietary value type for: ${t.atomPath}`)}break;case 1:case 18:await this.addTag(e,new TextDecoder("utf-8").decode(i.value));break;case 13:if(this.options.skipCovers)break;await this.addTag(e,{format:"image/jpeg",data:Uint8Array.from(i.value)});break;case 14:if(this.options.skipCovers)break;await this.addTag(e,{format:"image/png",data:Uint8Array.from(i.value)});break;case 21:await this.addTag(e,We.read_BE_Integer(i.value,!0));break;case 22:await this.addTag(e,We.read_BE_Integer(i.value,!1));break;case 65:await this.addTag(e,w.get(i.value,0));break;case 66:await this.addTag(e,C.get(i.value,0));break;case 67:await this.addTag(e,k.get(i.value,0));break;default:this.addWarning(`atom key=${e}, has unknown well-known-type (data-type): ${i.type.type}`)}}parseSoundSampleDescription(e){const t={dataFormat:e.dataFormat,dataReferenceIndex:e.dataReferenceIndex};let i=0;if(e.description){const s=ia.get(e.description,i);i+=ia.len,s.version===0||s.version===1?t.description=Xs.get(e.description,i):Y(`Warning: sound-sample-description ${s} not implemented`)}return t}async parseChapterTrack(e,t,i){if(!e.sampleSize&&e.chunkOffsetTable.length!==e.sampleSizeTable.length)throw new Error("Expected equal chunk-offset-table & sample-size-table length.");const s=[];for(let n=0;n<e.chunkOffsetTable.length&&i>0;++n){const r=e.timeToSampleTable.slice(0,n).reduce((I,z)=>I+z.duration,0),c=e.chunkOffsetTable[n]-this.tokenizer.position,u=e.sampleSize>0?e.sampleSize:e.sampleSizeTable[n];if(i-=c+u,i<0)throw new we("Chapter chunk exceeding token length");await this.tokenizer.ignore(c);const p=await this.tokenizer.readToken(new Ks(u));Y(`Chapter ${n+1}: ${p}`);const h={title:p,timeScale:e.timeScale,start:r,sampleOffset:this.findSampleOffset(t,this.tokenizer.position)};Y(`Chapter title=${h.title}, offset=${h.sampleOffset}/${this.tracks[0].duration}`),s.push(h)}this.metadata.setFormat("chapters",s),await this.tokenizer.ignore(i)}findSampleOffset(e,t){let i=0;e.timeToSampleTable.forEach(n=>{i+=n.count*n.duration}),Y(`Total duration=${i}`);let s=0;for(;s<e.chunkOffsetTable.length&&e.chunkOffsetTable[s]<t;)++s;return this.getChunkDuration(s+1,e)}getChunkDuration(e,t){let i=0,s=t.timeToSampleTable[i].count,n=t.timeToSampleTable[i].duration,r=1,o=this.getSamplesPerChunk(r,t.sampleToChunkTable),c=0;for(;r<e;){const u=Math.min(s,o);c+=u*n,s-=u,o-=u,o===0?(++r,o=this.getSamplesPerChunk(r,t.sampleToChunkTable)):(++i,s=t.timeToSampleTable[i].count,n=t.timeToSampleTable[i].duration)}return c}getSamplesPerChunk(e,t){for(let i=0;i<t.length-1;++i)if(e>=t[i].firstChunk&&e<t[i+1].firstChunk)return t[i].samplesPerChunk;return t[t.length-1].samplesPerChunk}}const Js=Object.freeze(Object.defineProperty({__proto__:null,MP4Parser:We},Symbol.toStringTag,{value:"Module"})),oa=b("music-metadata:parser:musepack:sv8"),Qs=new T(2,"latin1"),ca={len:5,get:(a,e)=>({crc:g.get(a,e),streamVersion:w.get(a,e+4)})},la={len:2,get:(a,e)=>({sampleFrequency:[44100,48e3,37800,32e3][S(a,e,0,3)],maxUsedBands:S(a,e,3,5),channelCount:S(a,e+1,0,4)+1,msUsed:N(a,e+1,4),audioBlockFrames:S(a,e+1,5,3)})};class en{get tokenizer(){return this._tokenizer}set tokenizer(e){this._tokenizer=e}constructor(e){this._tokenizer=e}async readPacketHeader(){const e=await this.tokenizer.readToken(Qs),t=await this.readVariableSizeField();return{key:e,payloadLength:t.value-2-t.len}}async readStreamHeader(e){const t={};oa(`Reading SH at offset=${this.tokenizer.position}`);const i=await this.tokenizer.readToken(ca);e-=ca.len,Object.assign(t,i),oa(`SH.streamVersion = ${i.streamVersion}`);const s=await this.readVariableSizeField();e-=s.len,t.sampleCount=s.value;const n=await this.readVariableSizeField();e-=n.len,t.beginningOfSilence=n.value;const r=await this.tokenizer.readToken(la);return e-=la.len,Object.assign(t,r),await this.tokenizer.ignore(e),t}async readVariableSizeField(e=1,t=0){let i=await this.tokenizer.readNumber(w);return(i&128)===0?{len:e,value:t+i}:(i&=127,i+=t,this.readVariableSizeField(e+1,i<<7))}}class Ve extends E("Musepack"){}const tn=b("music-metadata:parser:musepack");class an extends X{constructor(){super(...arguments),this.audioLength=0}async parse(){if(await this.tokenizer.readToken(f)!=="MPCK")throw new Ve("Invalid Magic number");return this.metadata.setFormat("container","Musepack, SV8"),this.parsePacket()}async parsePacket(){const e=new en(this.tokenizer);do{const t=await e.readPacketHeader();switch(tn(`packet-header key=${t.key}, payloadLength=${t.payloadLength}`),t.key){case"SH":{const i=await e.readStreamHeader(t.payloadLength);this.metadata.setFormat("numberOfSamples",i.sampleCount),this.metadata.setFormat("sampleRate",i.sampleFrequency),this.metadata.setFormat("duration",i.sampleCount/i.sampleFrequency),this.metadata.setFormat("numberOfChannels",i.channelCount);break}case"AP":this.audioLength+=t.payloadLength,await this.tokenizer.ignore(t.payloadLength);break;case"RG":case"EI":case"SO":case"ST":case"CT":await this.tokenizer.ignore(t.payloadLength);break;case"SE":return this.metadata.format.duration&&this.metadata.setFormat("bitrate",this.audioLength*8/this.metadata.format.duration),V.tryParseApeHeader(this.metadata,this.tokenizer,this.options);default:throw new Ve(`Unexpected header: ${t.key}`)}}while(!0)}}class sn{constructor(e){this.pos=0,this.dword=null,this.tokenizer=e}async read(e){for(;this.dword===null;)this.dword=await this.tokenizer.readToken(g);let t=this.dword;return this.pos+=e,this.pos<32?(t>>>=32-this.pos,t&(1<<e)-1):(this.pos-=32,this.pos===0?(this.dword=null,t&(1<<e)-1):(this.dword=await this.tokenizer.readToken(g),this.pos&&(t<<=this.pos,t|=this.dword>>>32-this.pos),t&(1<<e)-1))}async ignore(e){if(this.pos>0){const s=32-this.pos;this.dword=null,e-=s,this.pos=0}const t=e%32,i=(e-t)/32;return await this.tokenizer.ignore(i*4),this.read(t)}}const nn={len:6*4,get:(a,e)=>{const t={signature:new TextDecoder("latin1").decode(a.subarray(e,e+3)),streamMinorVersion:S(a,e+3,0,4),streamMajorVersion:S(a,e+3,4,4),frameCount:g.get(a,e+4),maxLevel:y.get(a,e+8),sampleFrequency:[44100,48e3,37800,32e3][S(a,e+10,0,2)],link:S(a,e+10,2,2),profile:S(a,e+10,4,4),maxBand:S(a,e+11,0,6),intensityStereo:N(a,e+11,6),midSideStereo:N(a,e+11,7),titlePeak:y.get(a,e+12),titleGain:y.get(a,e+14),albumPeak:y.get(a,e+16),albumGain:y.get(a,e+18),lastFrameLength:g.get(a,e+20)>>>20&2047,trueGapless:N(a,e+23,0)};return t.lastFrameLength=t.trueGapless?g.get(a,20)>>>20&2047:0,t}},da=b("music-metadata:parser:musepack");class rn extends X{constructor(){super(...arguments),this.bitreader=null,this.audioLength=0,this.duration=null}async parse(){const e=await this.tokenizer.readToken(nn);if(e.signature!=="MP+")throw new Ve("Unexpected magic number");da(`stream-version=${e.streamMajorVersion}.${e.streamMinorVersion}`),this.metadata.setFormat("container","Musepack, SV7"),this.metadata.setFormat("sampleRate",e.sampleFrequency);const t=1152*(e.frameCount-1)+e.lastFrameLength;this.metadata.setFormat("numberOfSamples",t),this.duration=t/e.sampleFrequency,this.metadata.setFormat("duration",this.duration),this.bitreader=new sn(this.tokenizer),this.metadata.setFormat("numberOfChannels",e.midSideStereo||e.intensityStereo?2:1);const i=await this.bitreader.read(8);return this.metadata.setFormat("codec",(i/100).toFixed(2)),await this.skipAudioData(e.frameCount),da(`End of audio stream, switching to APEv2, offset=${this.tokenizer.position}`),V.tryParseApeHeader(this.metadata,this.tokenizer,this.options)}async skipAudioData(e){for(;e-- >0;){const i=await this.bitreader.read(20);this.audioLength+=20+i,await this.bitreader.ignore(i)}const t=await this.bitreader.read(11);this.audioLength+=t,this.duration!==null&&this.metadata.setFormat("bitrate",this.audioLength/this.duration)}}const ma=b("music-metadata:parser:musepack");class on extends Ke{async postId3v2Parse(){const e=await this.tokenizer.peekToken(new T(3,"latin1"));let t;switch(e){case"MP+":{ma("Stream-version 7"),t=new rn(this.metadata,this.tokenizer,this.options);break}case"MPC":{ma("Stream-version 8"),t=new an(this.metadata,this.tokenizer,this.options);break}default:throw new Ve("Invalid signature prefix")}return t.parse()}}const cn=Object.freeze(Object.defineProperty({__proto__:null,MusepackParser:on},Symbol.toStringTag,{value:"Module"}));class Ea extends E("Opus"){}class ln{constructor(e){if(e<19)throw new Ea("ID-header-page 0 should be at least 19 bytes long");this.len=e}get(e,t){return{magicSignature:new T(8,"ascii").get(e,t+0),version:w.get(e,t+8),channelCount:w.get(e,t+9),preSkip:y.get(e,t+10),inputSampleRate:g.get(e,t+12),outputGain:y.get(e,t+16),channelMapping:w.get(e,t+18)}}}class dn extends ue{constructor(e,t,i){super(e,t),this.idHeader=null,this.lastPos=-1,this.tokenizer=i}parseFirstPage(e,t){if(this.metadata.setFormat("codec","Opus"),this.idHeader=new ln(t.length).get(t,0),this.idHeader.magicSignature!=="OpusHead")throw new Ea("Illegal ogg/Opus magic-signature");this.metadata.setFormat("sampleRate",this.idHeader.inputSampleRate),this.metadata.setFormat("numberOfChannels",this.idHeader.channelCount)}async parseFullPage(e){switch(new T(8,"ascii").get(e,0)){case"OpusTags":await this.parseUserCommentList(e,8),this.lastPos=this.tokenizer.position-e.length;break}}calculateDuration(e){if(this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0){const t=e.absoluteGranulePosition-this.idHeader.preSkip;if(this.metadata.setFormat("numberOfSamples",t),this.metadata.setFormat("duration",t/48e3),this.lastPos!==-1&&this.tokenizer.fileInfo.size&&this.metadata.format.duration){const i=this.tokenizer.fileInfo.size-this.lastPos;this.metadata.setFormat("bitrate",8*i/this.metadata.format.duration)}}}}const mn={len:80,get:(a,e)=>({speex:new T(8,"ascii").get(a,e+0),version:Ta(new T(20,"ascii").get(a,e+8)),version_id:v.get(a,e+28),header_size:v.get(a,e+32),rate:v.get(a,e+36),mode:v.get(a,e+40),mode_bitstream_version:v.get(a,e+44),nb_channels:v.get(a,e+48),bitrate:v.get(a,e+52),frame_size:v.get(a,e+56),vbr:v.get(a,e+60),frames_per_packet:v.get(a,e+64),extra_headers:v.get(a,e+68),reserved1:v.get(a,e+72),reserved2:v.get(a,e+76)})},un=b("music-metadata:parser:ogg:speex");class hn extends ue{constructor(e,t,i){super(e,t),this.tokenizer=i}parseFirstPage(e,t){un("First Ogg/Speex page");const i=mn.get(t,0);this.metadata.setFormat("codec",`Speex ${i.version}`),this.metadata.setFormat("numberOfChannels",i.nb_channels),this.metadata.setFormat("sampleRate",i.rate),i.bitrate!==-1&&this.metadata.setFormat("bitrate",i.bitrate)}}const pn={len:42,get:(a,e)=>({id:new T(7,"ascii").get(a,e),vmaj:w.get(a,e+7),vmin:w.get(a,e+8),vrev:w.get(a,e+9),vmbw:C.get(a,e+10),vmbh:C.get(a,e+17),nombr:U.get(a,e+37),nqual:w.get(a,e+40)})},lt=b("music-metadata:parser:ogg:theora");class gn{constructor(e,t,i){this.metadata=e,this.tokenizer=i}async parsePage(e,t){e.headerType.firstPage&&await this.parseFirstPage(e,t)}async flush(){lt("flush")}calculateDuration(e){lt("duration calculation not implemented")}async parseFirstPage(e,t){lt("First Ogg/Theora page"),this.metadata.setFormat("codec","Theora");const i=pn.get(t,0);this.metadata.setFormat("bitrate",i.nombr)}}class St extends E("Ogg"){}const Z=b("music-metadata:parser:ogg");class Je{static sum(e,t,i){const s=new DataView(e.buffer,0);let n=0;for(let r=t;r<t+i;++r)n+=s.getUint8(r);return n}constructor(e){this.len=e.page_segments}get(e,t){return{totalPageSize:Je.sum(e,t,this.len)}}}class Qe extends X{constructor(){super(...arguments),this.header=null,this.pageNumber=0,this.pageConsumer=null}async parse(){Z("pos=%s, parsePage()",this.tokenizer.position);try{let e;do{if(e=await this.tokenizer.readToken(Qe.Header),e.capturePattern!=="OggS")throw new St("Invalid Ogg capture pattern");this.metadata.setFormat("container","Ogg"),this.header=e,this.pageNumber=e.pageSequenceNo,Z("page#=%s, Ogg.id=%s",e.pageSequenceNo,e.capturePattern);const t=await this.tokenizer.readToken(new Je(e));Z("totalPageSize=%s",t.totalPageSize);const i=await this.tokenizer.readToken(new F(t.totalPageSize));if(Z("firstPage=%s, lastPage=%s, continued=%s",e.headerType.firstPage,e.headerType.lastPage,e.headerType.continued),e.headerType.firstPage){const s=new TextDecoder("ascii").decode(i.subarray(0,7));switch(s){case"vorbis":Z("Set page consumer to Ogg/Vorbis"),this.pageConsumer=new ue(this.metadata,this.options);break;case"OpusHea":Z("Set page consumer to Ogg/Opus"),this.pageConsumer=new dn(this.metadata,this.options,this.tokenizer);break;case"Speex  ":Z("Set page consumer to Ogg/Speex"),this.pageConsumer=new hn(this.metadata,this.options,this.tokenizer);break;case"fishead":case"\0theora":Z("Set page consumer to Ogg/Theora"),this.pageConsumer=new gn(this.metadata,this.options,this.tokenizer);break;default:throw new St(`gg audio-codec not recognized (id=${s})`)}}await this.pageConsumer.parsePage(e,i)}while(!e.headerType.lastPage)}catch(e){if(e instanceof Error)e instanceof ie?(this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),Z("End-of-stream"),this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),this.header&&this.pageConsumer.calculateDuration(this.header)):e.message.startsWith("FourCC")&&this.pageNumber>0&&(this.metadata.addWarning("Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag"),await this.pageConsumer.flush());else throw e}}}Qe.Header={len:27,get:(a,e)=>({capturePattern:f.get(a,e),version:w.get(a,e+4),headerType:{continued:A(a,e+5,0),firstPage:A(a,e+5,1),lastPage:A(a,e+5,2)},absoluteGranulePosition:Number(L.get(a,e+6)),streamSerialNumber:g.get(a,e+14),pageSequenceNo:g.get(a,e+18),pageChecksum:g.get(a,e+22),page_segments:w.get(a,e+26)})};const kn=Object.freeze(Object.defineProperty({__proto__:null,OggContentError:St,OggParser:Qe,SegmentTable:Je},Symbol.toStringTag,{value:"Module"})),Tn=[6e3,8e3,9600,11025,12e3,16e3,22050,24e3,32e3,44100,48e3,64e3,88200,96e3,192e3,-1],Re={len:32,get:(a,e)=>{const t=g.get(a,e+24),i={BlockID:f.get(a,e),blockSize:g.get(a,e+4),version:y.get(a,e+8),totalSamples:g.get(a,e+12),blockIndex:g.get(a,e+16),blockSamples:g.get(a,e+20),flags:{bitsPerSample:(1+qe(t,0,2))*8,isMono:K(t,2),isHybrid:K(t,3),isJointStereo:K(t,4),crossChannel:K(t,5),hybridNoiseShaping:K(t,6),floatingPoint:K(t,7),samplingRate:Tn[qe(t,23,4)],isDSD:K(t,31)},crc:new F(4).get(a,e+28)};return i.flags.isDSD&&(i.totalSamples*=8),i}},dt={len:1,get:(a,e)=>({functionId:qe(a[e],0,6),isOptional:K(a[e],5),isOddSize:K(a[e],6),largeBlock:K(a[e],7)})};function K(a,e){return qe(a,e,1)===1}function qe(a,e,t){return a>>>e&4294967295>>>32-t}const ce=b("music-metadata:parser:WavPack");class Le extends E("WavPack"){}class wn extends X{constructor(){super(...arguments),this.audioDataSize=0}async parse(){return this.audioDataSize=0,await this.parseWavPackBlocks(),V.tryParseApeHeader(this.metadata,this.tokenizer,this.options)}async parseWavPackBlocks(){do{if(await this.tokenizer.peekToken(f)!=="wvpk")break;const t=await this.tokenizer.readToken(Re);if(t.BlockID!=="wvpk")throw new Le("Invalid WavPack Block-ID");ce(`WavPack header blockIndex=${t.blockIndex}, len=${Re.len}`),t.blockIndex===0&&!this.metadata.format.container&&(this.metadata.setFormat("container","WavPack"),this.metadata.setFormat("lossless",!t.flags.isHybrid),this.metadata.setFormat("bitsPerSample",t.flags.bitsPerSample),t.flags.isDSD||(this.metadata.setFormat("sampleRate",t.flags.samplingRate),this.metadata.setFormat("duration",t.totalSamples/t.flags.samplingRate)),this.metadata.setFormat("numberOfChannels",t.flags.isMono?1:2),this.metadata.setFormat("numberOfSamples",t.totalSamples),this.metadata.setFormat("codec",t.flags.isDSD?"DSD":"PCM"));const i=t.blockSize-(Re.len-8);await(t.blockIndex===0?this.parseMetadataSubBlock(t,i):this.tokenizer.ignore(i)),t.blockSamples>0&&(this.audioDataSize+=t.blockSize)}while(!this.tokenizer.fileInfo.size||this.tokenizer.fileInfo.size-this.tokenizer.position>=Re.len);this.metadata.format.duration&&this.metadata.setFormat("bitrate",this.audioDataSize*8/this.metadata.format.duration)}async parseMetadataSubBlock(e,t){let i=t;for(;i>dt.len;){const s=await this.tokenizer.readToken(dt),n=await this.tokenizer.readNumber(s.largeBlock?Ft:w),r=new Uint8Array(n*2-(s.isOddSize?1:0));switch(await this.tokenizer.readBuffer(r),ce(`Metadata Sub-Blocks functionId=0x${s.functionId.toString(16)}, id.largeBlock=${s.largeBlock},data-size=${r.length}`),s.functionId){case 0:break;case 14:{ce("ID_DSD_BLOCK");const o=1<<w.get(r,0),c=e.flags.samplingRate*o*8;if(!e.flags.isDSD)throw new Le("Only expect DSD block if DSD-flag is set");this.metadata.setFormat("sampleRate",c),this.metadata.setFormat("duration",e.totalSamples/c);break}case 36:ce("ID_ALT_TRAILER: trailer for non-wav files");break;case 38:this.metadata.setFormat("audioMD5",r);break;case 47:ce(`ID_BLOCK_CHECKSUM: checksum=${yt(r)}`);break;default:ce(`Ignore unsupported meta-sub-block-id functionId=0x${s.functionId.toString(16)}`);break}i-=dt.len+(s.largeBlock?Ft.len:w.len)+n*2,ce(`remainingLength=${i}`),s.isOddSize&&this.tokenizer.ignore(1)}if(i!==0)throw new Le("metadata-sub-block should fit it remaining length")}}const In=Object.freeze(Object.defineProperty({__proto__:null,WavPackContentError:Le,WavPackParser:wn},Symbol.toStringTag,{value:"Module"})),Se={len:8,get:(a,e)=>({chunkID:new T(4,"latin1").get(a,e),chunkSize:g.get(a,e+4)})};class Sn{constructor(e){this.tagHeader=e,this.len=e.chunkSize,this.len+=this.len&1}get(e,t){return new T(this.tagHeader.chunkSize,"ascii").get(e,t)}}class Ye extends E("Wave"){}const M={PCM:1,ADPCM:2,IEEE_FLOAT:3,MPEG_ADTS_AAC:5632,MPEG_LOAS:5634,RAW_AAC1:255,DOLBY_AC3_SPDIF:146,DVM:8192,RAW_SPORT:576,ESST_AC3:577,DRM:9,DTS2:8193,MPEG:80},bn={[M.PCM]:"PCM",[M.ADPCM]:"ADPCM",[M.IEEE_FLOAT]:"IEEE_FLOAT",[M.MPEG_ADTS_AAC]:"MPEG_ADTS_AAC",[M.MPEG_LOAS]:"MPEG_LOAS",[M.RAW_AAC1]:"RAW_AAC1",[M.DOLBY_AC3_SPDIF]:"DOLBY_AC3_SPDIF",[M.DVM]:"DVM",[M.RAW_SPORT]:"RAW_SPORT",[M.ESST_AC3]:"ESST_AC3",[M.DRM]:"DRM",[M.DTS2]:"DTS2",[M.MPEG]:"MPEG"};class yn{constructor(e){if(e.chunkSize<16)throw new Ye("Invalid chunk size");this.len=e.chunkSize}get(e,t){return{wFormatTag:y.get(e,t),nChannels:y.get(e,t+2),nSamplesPerSec:g.get(e,t+4),nAvgBytesPerSec:g.get(e,t+8),nBlockAlign:y.get(e,t+12),wBitsPerSample:y.get(e,t+14)}}}class fn{constructor(e){if(e.chunkSize<4)throw new Ye("Invalid fact chunk size.");this.len=e.chunkSize}get(e,t){return{dwSampleLength:g.get(e,t)}}}const ua={len:420,get:(a,e)=>({description:te(new T(256,"ascii").get(a,e)).trim(),originator:te(new T(32,"ascii").get(a,e+256)).trim(),originatorReference:te(new T(32,"ascii").get(a,e+288)).trim(),originationDate:te(new T(10,"ascii").get(a,e+320)).trim(),originationTime:te(new T(8,"ascii").get(a,e+330)).trim(),timeReferenceLow:g.get(a,e+338),timeReferenceHigh:g.get(a,e+342),version:y.get(a,e+346),umid:new F(64).get(a,e+348),loudnessValue:y.get(a,e+412),maxTruePeakLevel:y.get(a,e+414),maxMomentaryLoudness:y.get(a,e+416),maxShortTermLoudness:y.get(a,e+418)})},ee=b("music-metadata:parser:RIFF");class Cn extends X{constructor(){super(...arguments),this.blockAlign=0}async parse(){const e=await this.tokenizer.readToken(Se);if(ee(`pos=${this.tokenizer.position}, parse: chunkID=${e.chunkID}`),e.chunkID==="RIFF")return this.parseRiffChunk(e.chunkSize).catch(t=>{if(!(t instanceof ie))throw t})}async parseRiffChunk(e){const t=await this.tokenizer.readToken(f);switch(this.metadata.setFormat("container",t),t){case"WAVE":return this.readWaveChunk(e-f.len);default:throw new Ye(`Unsupported RIFF format: RIFF/${t}`)}}async readWaveChunk(e){for(;e>=Se.len;){const t=await this.tokenizer.readToken(Se);switch(e-=Se.len+t.chunkSize,t.chunkSize>e&&this.metadata.addWarning("Data chunk size exceeds file size"),this.header=t,ee(`pos=${this.tokenizer.position}, readChunk: chunkID=RIFF/WAVE/${t.chunkID}`),t.chunkID){case"LIST":await this.parseListTag(t);break;case"fact":this.metadata.setFormat("lossless",!1),this.fact=await this.tokenizer.readToken(new fn(t));break;case"fmt ":{const i=await this.tokenizer.readToken(new yn(t));let s=bn[i.wFormatTag];s||(ee(`WAVE/non-PCM format=${i.wFormatTag}`),s=`non-PCM (${i.wFormatTag})`),this.metadata.setFormat("codec",s),this.metadata.setFormat("bitsPerSample",i.wBitsPerSample),this.metadata.setFormat("sampleRate",i.nSamplesPerSec),this.metadata.setFormat("numberOfChannels",i.nChannels),this.metadata.setFormat("bitrate",i.nBlockAlign*i.nSamplesPerSec*8),this.blockAlign=i.nBlockAlign;break}case"id3 ":case"ID3 ":{const i=await this.tokenizer.readToken(new F(t.chunkSize)),s=ye(i);await new W().parse(this.metadata,s,this.options);break}case"data":{this.metadata.format.lossless!==!1&&this.metadata.setFormat("lossless",!0);let i=t.chunkSize;if(this.tokenizer.fileInfo.size){const n=this.tokenizer.fileInfo.size-this.tokenizer.position;n<i&&(this.metadata.addWarning("data chunk length exceeding file length"),i=n)}const s=this.fact?this.fact.dwSampleLength:i===4294967295?void 0:i/this.blockAlign;s&&(this.metadata.setFormat("numberOfSamples",s),this.metadata.format.sampleRate&&this.metadata.setFormat("duration",s/this.metadata.format.sampleRate)),this.metadata.format.codec==="ADPCM"?this.metadata.setFormat("bitrate",352e3):this.metadata.format.sampleRate&&this.metadata.setFormat("bitrate",this.blockAlign*this.metadata.format.sampleRate*8),await this.tokenizer.ignore(t.chunkSize);break}case"bext":{const i=await this.tokenizer.readToken(ua);Object.keys(i).forEach(n=>{this.metadata.addTag("exif",`bext.${n}`,i[n])});const s=t.chunkSize-ua.len;await this.tokenizer.ignore(s);break}case"\0\0\0\0":ee(`Ignore padding chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${t.chunkID}`),await this.tokenizer.ignore(t.chunkSize);break;default:ee(`Ignore chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${t.chunkID}`),await this.tokenizer.ignore(t.chunkSize)}this.header.chunkSize%2===1&&(ee("Read odd padding byte"),await this.tokenizer.ignore(1))}}async parseListTag(e){const t=await this.tokenizer.readToken(new T(4,"latin1"));switch(ee("pos=%s, parseListTag: chunkID=RIFF/WAVE/LIST/%s",this.tokenizer.position,t),t){case"INFO":return this.parseRiffInfoTags(e.chunkSize-4);default:return this.metadata.addWarning(`Ignore chunk: RIFF/WAVE/LIST/${t}`),ee(`Ignoring chunkID=RIFF/WAVE/LIST/${t}`),this.tokenizer.ignore(e.chunkSize-4).then()}}async parseRiffInfoTags(e){for(;e>=8;){const t=await this.tokenizer.readToken(Se),i=new Sn(t),s=await this.tokenizer.readToken(i);this.addTag(t.chunkID,te(s)),e-=8+i.len}if(e!==0)throw new Ye(`Illegal remaining size: ${e}`)}addTag(e,t){this.metadata.addTag("exif",e,t)}}const An=Object.freeze(Object.defineProperty({__proto__:null,WaveParser:Cn},Symbol.toStringTag,{value:"Module"}));export{Rn as p};
